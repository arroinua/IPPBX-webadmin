/* 
 * ѕрограммный интерфейс сервера состоит и набора  процедур удаленного вызова, которые выполн€ютс€ в режиме запрос-ответ,
 * а также нотификаций, отправл€емых от сервера клиентам.
 * «апросы, ответы и нотификации представл€ют собой текстовые сообщени€ в формате JSON. 
 * 
 * ¬ качестве транспорта дл€ передачи сообщений можно использовать протоколы WebSocket или HTTPS.
 * —ервер обслуживает HTTP запросы и подключени€ по WebSocket  на порту, устанавливаемом в настройках панели администратора.
 * «апросы нужно отправл€ть с авторизацией Basic (логин/пароль админа)
 *
 *
 * —интаксис запросов включает в себ€ пол€ УidФ, УmethodФ и УparamsФ.
 * ќтвет сервера содержит пол€ УidФ, УresultФ или, в случае ошибки УidФ, УerrorФ.
 *
 * Ќапример:
 * «апрос: {УmethodФ: УgetUserInfoФ, УparamsФ: {  УuseridФ: У1002Ф }, УidФ: 1}
 * ќтвет:  { УresultФ: {УfirstnameФ: УJohnФ, УlastnameФ: УDoeФ, УdepartmentФ: УMarketingФ, УpositionФ: УmanagerФ, УmobileФ: У34456Ф}, УidФ: 1}
 *
 *
 * —интаксис описани€ сообщений
 *
 * ƒл€ описани€ сообщений используетс€ следующий формат:
 * {
 *	УmethodФ:		Уname of the methodФ
 *	УparamsФ: {
 *		Уparam1Ф:	Уtype of the parameterФ,
 *		Уparam2Ф:	Уtype of the parameterФ,
 *		Е
 *      },
 *      УresultФ: {
 *		Уparam1Ф:	Уtype of the parameterФ,
 *		Уparam2Ф:	Уtype of the parameterФ,
 *		Е
 *      }
 * }
 *
 * “ипы параметров: УstringФ, УnumberФ, УbooleanФ (также возможно УintegerФ и УfloatФ).
 * ѕараметр-массив обозначаетс€ квадратными скобками [ ], параметр-таблица Ц фигурными скобками { }.
 *
 *
 */

{


/*************************************************************************************************************
 *  Ќотификаци€ от сервера клиенту
 *************************************************************************************************************/

/* 
 * Ќотификаци€ об изменении состо€ни€ объекта
 * 
 * method:  "stateChanged"
 * 
 * params:  
 *          "oid":      идентификатор объекта
 *          "kind":     тип объекта
 *          "ext":      внутренний номер телефона
 *          "state":    состо€ние
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресаци€ на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исход€щий вызов
 *                      7 - вход€щий вызов
 *                      8 - соединен
 *                     -1 - удален
 *          
 *          "userid":   идентификатор пользовател€
 *          "termid":   идентификатор терминала пользовател€
 *          "reg":      ip адрес регистрации или номер переадресации
 
 *          "alerted":  список текущих вход€щих вызовов
 *          "connected":список текущих соединенных вызовов
 *          "dialed":   список текущих исход€щих вызовов
 *                      "line":     идентификатор линии на сервере
 *                      "party":    номер телефона абонента
 */

"stateChanged": {
    "type":             "indication",
    
    "params": {
        "oid":          "string",
        "kind":         "string",
        "ext":          "string",
        "state":        "number",
        "userid":       "string",
        "termid":       "string",
        "reg":          "string",
        "alerted": [
            {
            "line":     "string",
            "party":    "string",
            }
        ],
        "connected": [
            {
            "line":     "string",
            "party":    "string",
            }
        ],
        "dialed": [
            {
            "line":     "string",
            "party":    "string",
            }
        ],
    }
},

/* 
 * »зменение состо€ни€ конференции 
 * 
 * method:  "conferenceUpdate"
 * 
 * params:  
 *          "oid":      идентификатор конференции
 *          "number":   номер телефона участника
 *          "state":    состо€ние
 *                      0 - отключилс€
 *                      1 - подключилс€
 *          "name":     им€ участника
 * 
 */

"conferenceUpdate": {
    "type":             "indication",
    
    "params": {
        "oid":          "string",
        "number":       "string",
        "state":        "number",
        "name":         "string",
        "total":        "number",
    }
},

/*************************************************************************************************************
 *  ћетоды админа бранча
 *************************************************************************************************************/
  
/*
 * ѕолучить список созданных внутренних номеров
 * 
 * Method: "getExtensions"
 * 
 * Example:
 * -> {"method":"getExtensions"}
 * <- {"result":[{ ["ext":"101", "oid":"234254761347", "name":"John Smith", "kind":"user", "groupid":"2364574722245", "state":1 ],[ ... ], ... } }]
 * 
 * Parameters:
 *  none
 *          
 *  result: список номеров
 *          "ext":      номер
 *          "name":     им€ объекта
 *          "kind":     тип объекта:
 *                      "user" - пользователь
 *                      "phone" - телефонный аппарат
 *                      "unit"  - группа телефонов
 *                      "hunting" - группа поиска
 *                      "icd" - группа обслуживани€ вход€щего вызова
 *                      "application" - приложение
 *                      "conference" -  конференц-группа
 *                      
 *          "groupid":  идентификатор группы (дл€ объектов типа "user" или "phone")
 *          
 *          "state":    состо€ние (дл€ объектов типа "user" или "phone")
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресаци€ на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исход€щий вызов
 *                      7 - вход€щий вызов
 *                      8 - соединен
 */
"getExtensions": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": [
        {
            "ext":          "string",
            "name":         "string",
            "kind":         "string",
            "groupid":      "string",
            "state":        "number",
        }
    ]
},

/* 
 * ѕолучить список текущих соединений.
 * 
 * method:  "getCurrentCalls"
 * 
 * params:  Ќет
 * 
 * result:  список текущих соединений
 *          "caller":   вызывающий номер
 *          "called":   вызываемый номер
 *          "time":     длительность соединени€ (только дл€ соединенных звонков
 * 
 */

"getCurrentCalls": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": [
        {
            "caller":       "string",
            "called":       "string",
            "time":         "number",
        }
    ]
},

/* 
 * ѕолучить список соединений и загрузку по транкам.
 * 
 * method:  "getCurrentState"
 * 
 * params:  Ќет
 * 
 * result:  таблица параметров:
 * 
 *          "in":       количество вход€щих соединений
 *          "out":      количество исход€щих соединений
 *          "conn":     количество соединенных вызовов
 *          "load":     загрузка портов (в процентах)
 *          "trunks":   список транков
 *                      "id":   идентификатор транка
 *                      "name": им€ транка
 *                      "in":   количество вход€щих соединений
 *                      "out":  количество исход€щих соединений
 *                      "load": загрузка транка (в процентах)
 * 
 */

"getCurrentState": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": {
        "in":               "number",
        "out":              "number",
        "conn":             "number",
        "load":             "number",       
        "trunks": [
            {
                "id":       "string",
                "name":     "string",
                "in":       "number",
                "out":      "number",
                "load":     "number",
            }
        ]
    }
},


/* 
 * ѕолучить историю регистраций пользовател€
 * 
 * method:  "getUserRegistrationsHistory"
 * 
 * params:  таблица параметров:
 *          "userid":   идентификатор пользовател€
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 * 
 * result:  список таблиц параметров:
 * 
 *          "rid":      идентификатор регистрации
 *          "treg":     штамп времени регистрации (в миллисекундах от 1.01.1970)
 *          "tunreg":   штамп времени разрегистрации (в миллисекундах от 1.01.1970)
 *          "iaddr":    ip address
 *          "devinfo":  device info
 * 
 */

"getUserRegistrationsHistory": {
    "type":                 "method",
    
    "params": {
        "userid":           "string",
        "begin":            "number",
        "end":              "number",
    },
    
    "result": [
        {
            "rid":          "string",
            "treg":         "number",
            "tunreg":       "number",
            "iaddr":        "string",       
            "devinfo":      "string",
        }
    ],
},


/* 
 * ѕолучить список состо€ний транков
 * 
 * method:  "getTrunkStates"
 * 
 * params:  таблица параметров:
 * 
 * result:  список таблиц параметров:
 * 
 *          "oid":      идентификатор транка
 *          "trunk":    им€ транка
 *          "treg":     штамп времени регистрации (в миллисекундах от 1.01.1970)
 *          "tunreg":   штамп времени разрегистрации (в миллисекундах от 1.01.1970)
 * 
 */

"getTrunkStates": {
    "type":                 "method",
    
    "params": {
        "orderby":          "string",
    },
    
    "result": [
        {
            "oid":          "string",
            "trunk":        "string",
            "treg":         "number",
            "tunreg":       "number",       
        }
    ],
},


/* 
 * ѕолучить историю регистраций транка
 * 
 * method:  "getTrunkRegistrationsHistory"
 * 
 * params:  таблица параметров:
 *          "oid":      идентификатор транка
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 * 
 * result:  список таблиц параметров:
 * 
 *          "oid":      идентификатор транка
 *          "trunk":    им€ транка
 *          "treg":     штамп времени регистрации (в миллисекундах от 1.01.1970)
 *          "tunreg":   штамп времени разрегистрации (в миллисекундах от 1.01.1970)
 * 
 */

"getTrunkRegistrationsHistory": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
        "begin":            "number",
        "end":              "number",
    },
    
    "result": [
        {
            "oid":          "string",
            "trunk":        "string",       
            "treg":         "number",
            "tunreg":       "number",
        }
    ],
},

/* 
 * ѕолучить статистику звонков по транкам.
 * 
 * method:  "getTrunkStatistics"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 * 
 * result:  список таблиц
 *          "trunk":    им€ транка
 *          "in":       параметры дл€ вход€щих звонков
 *          "out":      параметры дл€ исход€щих звонков
 *
 *          "tc":       общее количество звонков
 *          "tt":       количество соединенных звонков
 *          "acd":      средн€€ длительность звонка
 *          "asr":      процент успешных исход€щих звонков
 *          "lat":      средн€€ задержка передачи пакетов
 *          "lne":      процент потерь пакетов на стороне сервера
 *          "lfe":      процент потерь пакетов на стороне транка
 *          "jne":      джиттер на стороне сервера
 *          "jfe":      джиттер на стороне транка
 *          "mne":      mos на стороне сервера
 *          "mfe":      mos на стороне транка
 *          "rne":      r-factor на стороне сервера
 *          "rfe":      r-factor на стороне транка
 * 
 */

"getTrunkStatistics": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
    },
    
    "result": [
        {
            "trunk":    "string",
            "in":  {
                "tc":       "number",
                "cc":       "number",
                "acd":      "number",
                "lat":      "number",
                "lne":      "number",
                "lfe":      "number",
                "jne":      "number",
                "jfe":      "number",
                "mne":      "number",
                "mfe":      "number",
                "rne":      "number",
                "rfe":      "number",
            },
            "out": {
                "tc":       "number",
                "cc":       "number",
                "acd":      "number",
                "lat":      "number",
                "lne":      "number",
                "lfe":      "number",
                "jne":      "number",
                "jfe":      "number",
                "mne":      "number",
                "mfe":      "number",
                "rne":      "number",
                "rfe":      "number",
            },
        }
    ]
},


/* 
 * ѕолучить данные дл€ временной диаграммы качества транка.
 * 
 * method:  "getTrunkStatisticsGraph"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "interval": интервал выборки в миллисекундах
 *          "number":   номер телефона
 *          "trunk":    им€ транка
 * 
 * result:  список:
 *          "ts":       штамп времени начала интервала (в миллисекундах от 1.01.1970)
 *          "in":       количество вход€щих звонков в указанный интервал
 *          "out":      количество исход€щих звонков в указанный интервал
 *          "acd":      средн€€ длительность звонка
 *          "asr":      процент успешных исход€щих звонков
 *          "lat":      средн€€ задержка передачи пакетов
 *          "lne":      процент потерь пакетов на стороне сервера
 *          "lfe":      процент потерь пакетов на стороне транка
 *          "jne":      джиттер на стороне сервера
 *          "jfe":      джиттер на стороне транка
 *          "mne":      mos на стороне сервера
 *          "mfe":      mos на стороне транка
 *          "rne":      r-factor на стороне сервера
 *          "rfe":      r-factor на стороне транка
 * 
 */

"getTrunkStatisticsGraph": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "interval":         "number",
        "number":           "string",
        "trunk":            "string",
    },
    
    "result": [
        {
            "ts":       "number",
            "in":       "number",
            "out":      "number",
            "acd":      "number",
            "asr":      "number",
            "lat":      "number",
            "lne":      "number",
            "lfe":      "number",
            "jne":      "number",
            "jfe":      "number",
            "mne":      "number",
            "mfe":      "number",
        }
    ]
},


/* 
 * ѕолучить статистику звонков.
 * 
 * method:  "getCallStatistics"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 * 
 * result:  таблица
 *          "inbounds"  статистика по вход€щим вызовам
 *                      "total":    общее количество вызовов
 *                      "lost":     количество потер€нных вызовов
 *                      "duration": общее количество секунд
 *                      
 *          "outbounds":статистика по исход€щим вызовам
 *                      "total":    общее количество вызовов
 *                      "connected":количество соединенных вызовов
 *                      "duration": общее количество секунд
 *                      "cost":     обща€ стоимость звонков
 *                      
 *          "internals" статистика по внутренним вызовам
 *                      "total":    общее количество вызовов
 *                      "duration": общее количество секунд
 *                      
 *          "trunks":   статистика по транкам
 *                      "trunk":    им€ транка
 *                      "in":       количество вход€щих звонков
 *                      "insec":    количество минут вход€щих звонков
 *                      "out":      количество исход€щих звонков
 *                      "outsec":   количество минут исход€щих звонков
 *                      "cost":     стоимость исход€щих звонков
 * 
 */

"getCallStatistics": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
    },
    
    "result": {
        "inbounds": {
            "total":        "number",
            "lost":         "number",
            "duration":     "number",            
        },
        "outbounds": {
            "total":        "number",
            "connected":    "number",
            "duration":     "number",            
            "cost":         "number",            
        },
        "internals": {
            "total":        "number",
            "duration":     "number",            
        },
        "trunks": [
            {
                "trunk":    "string",
                "in":       "number",
                "insec":    "number",
                "out":      "number",
                "outsec":   "number",
                "cost":     "number",
            }
        ]
    }
},


/* 
 * ѕолучить статистику звонков по номерам.
 * 
 * method:  "getCallStatisticsExt"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "kind":     тип вызова
 *                      "inbound"   вход€щий
 *                      "outbound"  исход€щий
 * 
 * result:  список таблиц данных:
 *          "ext":      номер телефона
 *          "total":    общее количество вызовов
 *          "connected":количество соединенных вызовов
 *          "duration": общее количество секунд
 *          "cost":     обща€ стоимость звонков
 * 
 */

"getCallStatisticsExt": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "kind":             "string",
    },
    
    "result": [
        {
            "ext":          "number",
            "total":        "number",
            "connected":    "number",
            "duration":     "number",            
            "cost":         "number",            
        }
    ]
},


/* 
 * ѕолучить данные дл€ временной диаграммы количества звонков.
 * 
 * method:  "getCallStatisticsGraph"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "interval": интервал выборки в миллисекундах
 *          "number":   номер телефона
 *          "trunk":    им€ транка
 * 
 * result:  список:
 *          "t":        штамп времени начала интервала (в миллисекундах от 1.01.1970)
 *          "i":        количество вход€щих звонков в указанный интервал
 *          "o":        количество исход€щих звонков в указанный интервал
 *          "l":        количество внутренних звонков в указанный интервал
 *          "m":        количество пропущенных вход€щих звонков в указанный интервал
 *          "is":        количество секунд вход€щих звонков за указанный интервал
 *          "os":        количество секунд исход€щих звонков за указанный интервал
 *          "ls":        количество секунд внутренних звонков за указанный интервал
 * 
 */

"getCallStatisticsGraph": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "interval":         "number",
        "number":           "string",
        "trunk":            "string",
    },
    
    "result": [
        {
            "t":            "number",
            "i":            "number",
            "o":            "number",
            "l":            "number",
            "is":           "number",
            "os":           "number",
            "ls":           "number",
            "m":            "number",
        }
    ]
},


/* 
 * ѕолучить данные дл€ временной диаграммы количества зан€тых линий.
 * 
 * method:  "getLinesPayload"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "interval": интервал выборки в миллисекундах
 *          "trunk":    им€ транка. ѕри отсутствии возвращаетс€ обща€ загрузка PBX
 * 
 * result:  список:
 *          "t":        штамп времени начала интервала (в миллисекундах от 1.01.1970)
 *          "p":        усредненное количество зан€тых линий в указанный интервал
 * 
 */

"getLinesPayload": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "interval":         "number",
        "trunk":            "string",
    },
    
    "result": [
        {
            "t":            "number",
            "p":            "number",
        }
    ]
},


/* 
 * ѕолучить историю потер€нных вызовов.
 * 
 * method:  "getLostCalls"
 * 
 * params:  таблица параметров:
 *          "begin":    начальна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечна€ граница выборки (в миллисекундах от 1.01.1970)
 *          "number":   номер абонента. ¬ыбираютс€ все не прин€тые звонки на этот номер.
 *                      ≈сли параметр отсутствует, выбираютс€ все потер€нные вход€щие звонки
 *          "cause":    код завершени€ звонка
 * 
 * result:  список текущих соединений
 *          "ts":       штамп времени звонка (в миллисекундах от 1.01.1970)
 *          "na":       вызывающий номер
 *          "nb":       вызываемый номер
 *          "nc":       исход€щий номер
 *          "cs":       код завершени€ (стандартный код ISDN)
 * 
 */

"getLostCalls": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "number":           "string",
        "cause":            "number",
    },
    
    "result": [
        {
            "ts":           "number",
            "na":           "string",
            "nb":           "string",
            "ta":           "string",
            "tb":           "string",
            "nc":           "string",
            "cs":           "number",
        }
    ]
},


/* 
 * ¬ключить/выключить объект
 * 
 * method:  "setObjectState"
 * 
 * params:  таблица параметров:
 *          "oid":      идентификатор объекта
 *          "enabled":  true / false
 * 
 * result:  нет
 * 
 */

"setObjectState": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
        "enabled":          "boolean",
    },
    
},


/*
 * Method: "getObject"
 * 
 * Example:
 * -> { "method": "getObject", "params": { "oid": "234254761347" }, "id":1 }
 * <- { "result": { "oid": "234254761347", name":"John Smith", "kind":"user", "number":"101", "enabled":true, "features":{...} }, "id":1 }
 * 
 * Parameters:
 *  "oid"   - object identifier
 *          
 * Returns:
 *  Properties of requested object. 
 */

"getObject": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
    },
    
    "result": {
        "enum": ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    }
},

/*
 * Method: "setObject"
 * 
 * Example:
 * -> { "method": "setObject", "params":{"oid": "234254761347", name":"Ozzy", "features":{"fwdall":true, "fwdallnumber":"335452222"}}, "id":1 }
 * <- { "result": "OK", "id":1 }
 * 
 * Parameters:
 *  All or any of object's parameters.
 *  Parameter "oid" must be present for update and must not be present for new created object
 *          
 * Returns:
 *  "result": "OK" - success
 *  or 
 *  "error": "message"
 */

"setObject": {
    "type":                 "method",
    
    "params": {
        "enum": ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    },
  
    "result":               "OK",
},


/* 
 * ѕолучить список пользователей дл€ добавлени€ в группу
 * 
 * method:  "getAvailableUsers"
 * 
 * params:  "groupid": идентификатор группы (oid). ≈сли не указан - отправл€етс€ список всех пользователей бранча
 * 
 * result:  список с параметрами:
 * 
 *          "oid":      идентификатор пользовател€
 *          "ext":      внутренний номер
 *          "name":     им€
* 
 */

"getAvailableUsers": {
    "type":                 "method",
    
    "params": {
        "groupid"           "string"
    },
    
    "result": [
        {
            "oid":      "string",  
            "ext":      "string",
            "name":     "string",
        }
    ]
},

/* 
 * ѕолучить размеры хранилищ всех пользователей бранча
 * 
 * method:  "getStoreInfo"
 * 
 * params:  нет
 * 
 * result:  список с параметрами:
 * 
 *          "user":         идентификатор пользовател€
 *          "size":         размер зан€того пространства в байтах
 *          "limit":        размер выделенного пространства в байтах
 * 
 */

"getStoreInfo": {
    "type":                 "method",
        
    "params": {
    },
    
    "result": [
        {
            "user":         "string",
            "size":         "number",
            "limit":        "number",
        }
    ]
},

/* 
 * ”становить размер хранилища пользовател€
 * 
 * method:  "setStoreLimit"
 * 
 * params:  список с параметрами:
 * 
 *          "oid":           идентификатор пользовател€
 *          "limit":        максимальный размер в байтах
 *                          
 * result:  установленный размер хранилища в байтах
 *          ≈сли запрашиваемый размер превышает остаток лимита бранча, значение будет равно этому остатку.
 *          ≈сли запрашиваемый размер меньше, чем объем уже исподьзуемый пользователем, значение равно этому объему.
 * 
 */

"setStoreLimit": {
    "type":                 "method",
        
    "params": {
        "oid":              "string",
        "limit":            "number",
    },
    
    "result":               "number",
},

/* 
 * ѕолучить список протоколов и параметров (on-premise only)
 * 
 * method:  "getDeviceSettings"
 * 
 * params:  нет
 * 
 * result:  список с параметрами:
 * 
 *          "stun":         STUN сервер
 *          "router":       адрес роутера
 *          "rtpfirst":     начальный номер диапазона портов RTP
 *          "rtplast":     конечный номер диапазона портов RTP
 * 
 */

"getDeviceSettings": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": {
        "sip": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "sips": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "wss": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "codecs": [
            {
            "codec":    "string",
            "frame":    "integer",
            }
        ],
        "http": {
            "port":         "number",  
            "ssl":          "boolean",  
            "log":          "number",
        },
        "nat": {
            "stun":             "string",
            "router":           "string",
            "rtpfirst":         "number",
            "rtplast":          "number",
        },
        "registrar": {
            "minexpires":       "number",
            "maxexpires":       "number",            
        },
        "net": {
            "tcptimeout":       "number",
            "rtptimeout":       "number",
            "iptos":            "number",
        },
        "system": {
            "config":           "string",
            "backup":           "string",
            "store":            "string",
            "recformat":        "number",            
        }
    }
},


/* 
 * ”становить параметры (on-premise only)
 * 
 * method:  "setDeviceSettings"
 * 
 * params:  список с параметрами:
 * 
 * result:  нет
 * 
 */

"setDeviceSettings": {
    "type":                 "method",
        
    "params": {
        "sip": {
            "port":         "number",  
            "log":          "number",
        },
        "sips": {
            "port":         "number",  
            "log":          "number",
        },
        "wss": {
            "port":         "number",  
            "log":          "number",
        },
        "codecs": [
            {
            "codec":    "string",
            "frame":    "integer",
            }
        ],
        "http": {
            "port":         "number",  
            "ssl":          "boolean",  
            "log":          "number",
        },
        "nat": {
            "stun":             "string",
            "router":           "string",
            "rtpfirst":         "number",
            "rtplast":          "number",
        },
        "registrar": {
            "minexpires":       "number",
            "maxexpires":       "number",            
        },
        "net": {
            "tcptimeout":       "number",
            "rtptimeout":       "number",
            "iptos":            "number",
        },
        "system": {
            "config":           "string",
            "backup":           "string",
            "store":            "string",
            "recformat":        "number",            
        }
    }
},

/* 
 * ѕолучить параметры всех хранилищ (on-premise only)
 * 
 * method:  "getFileStore"
 * 
 * params:  нет
 * 
 * result:  список хранилищ с параметрами:
 * 
 *          "id":           идентификатор хранилища
 *          "path":         путь на директорий
 *          "maxsize":      максимальный размер в байтах
 *          "state":        статус хранилища:
 *                          0 - отключено
 *                          1 - рабочее
 *                          2 - резерв
 *                          3 - ошибка
 *                          4 - заполнено
 *          "created":      дата создани€
 *          "updated":      дата редактировани€
 *          "usedsize":     использованное место (в байтах)
 *          "freespace":    свободное место на диске (в байтах)
 *              
 * 
 */

"getFileStore": {
    "type":                 "method",
        
    "params": {
    },
    
    "result": [
        {
            "id":           "string",
            "path":         "string",
            "maxsize":      "number",
            "state":        "number",
            "created":      "number",
            "updated":      "number",
            "usedsize":     "number",
            "freespace":    "number",
        }
    ]
},


/* 
 * ”становить параметры хранилища (on-premise only)
 * 
 * method:  "setFileStore"
 * 
 * params:  список с параметрами:
 * 
 *          "id":           идентификатор хранилища
 *                          ≈сли идентификатор отсутствует, создаетс€ новое хранилище
 *          "path":         путь на директорий
 *          "maxsize":      максимальный размер в байтах
 *          "state":        статус хранилища:
 *                          0 - отключено
 *                          1 - рабочее
 *                          2 - резерв
 *                          
 * result:  идентификатор хранилища
 * 
 */

"setFileStore": {
    "type":                 "method",
        
    "params": {
        "id":               "string",
        "path":             "string",
        "maxsize":          "number",
        "state":            "number",
    },
    
    "result":               "string",
},

/* 
 * —генерировать сертификат
 * 
 * method:  "createCertificate"
 * 
 * params:  список параметров:
 * 
 *          "CN":           host name (им€ или IP адрес сервера)
 *          "OU":           organization unit (отдел)
 *          "O":            organization (организаци€)
 *          "L":            city of location (город)
 *          "ST":           region/state (регион)
 *          "C":            country code (код страны)
 *          "V":            period of validity (days)
 * 
 * 
 * result:  сертификат в строковом формате (PEM Base64 tncoded)
 * 
 */

"createCertificate": {
    "type":                 "method",
    
    "params": {
        "CN":               "string",
        "OU":               "string",
        "O":                "string",
        "L":                "string",
        "ST":               "string",
        "C":                "string",
        "V":                "number",
    },
    
    "result":               "string",
},


/* 
 * ”становить сертификат
 * 
 * method:  "setCertificate"
 * 
 * params:  список параметров:
 * 
 *          "privatekey":  приватный ключ в строковом формате
 *          "certificate": сертификат в строковом формате (PEM Base64 tncoded)
 * 
 */

"setCertificate": {
    "type":                 "method",
    
    "params": {
        "privatekey":       "string", // on-premise only
        "certificate":      "string",
    },
    
},


/* 
 * ѕолучить список сертификатов с сервера
 * 
 * method:  "getCertificates"
 * 
 * params:  нет
 * 
 * 
 * "result": список имен сертификатов
 * 
 */

"getCertificates": {
    "type":                 "method",
    
    "params": {
    },
    
    "result":              ["string"],
},


/* 
 * ѕолучить сертификат с сервера
 * 
 * method:  "getCertificate"
 * 
 * params:  список параметров:
 * 
 *          "alias":        им€ сертификата
 * 
 * "result": список параметров:
 * 
 *          "certificate": сертификат в строковом формате (PEM Base64 tncoded)
 */

"getCertificate": {
    "type":                 "method",
    
    "params": {
        "alias":            "string",
    },
    
    "result": {
        "certificate":      "string",
    },
    
},


/* 
 * ”далить сертификат
 * 
 * method:  "removeCertificate"
 * 
 * params:  список параметров:
 * 
 *          "alias":        им€ сертификата
 * 
 */

"removeCertificate": {
    "type":                 "method",
    
    "params": {
        "alias":            "string",
    },
    
},


/*
 * ”становить роут
 * 
 * method:  "setRoute"
 * 
 * params:  параметры:
 *          "oid":          идентификатор роута
 *          "groupid":      идентификатор таблицы
 *          "number":       номер/префикс
 *          "description":  описание
 *          "target":       объект маршрута
 *                          "oid":          идентификатор объекта
 *                          "name":         им€ объекта
 *          "priority":     приоритет
 *          "cost":         тариф (за минуту)
 *          "huntstop":     флаг остановки поиска маршрута на данном роуте
 * 
 * result:  "oid":          идентификатор роута
 */
"setRoute": {
    "type":                 "method",
        
    "params": {
        "oid":              "string",
        "groupid":          "string",
        "number":           "string",
        "description":      "string",
        "target": {
            "oid":          "string",
            "name":         "string",            
        },
        "priority":         "number",
        "cost":             "float",
        "huntstop":         "boolean",
    },
    
    "result": {
        "oid":              "string",
    }
},


/*
 * ѕолучить список контактов дл€ истории звонков
 * 
 * method:  "getCallsHistory"
 * 
 * params:  таблица параметров:
 *          
 *          "since":    врем€ начала выборки (в миллисекундах от 01.01.1970)
 *          "period":   период времени от текущей даты (вместо параметра "since"):
 *                      0   за все врем€
 *                      1   за последний год
 *                      2   за последний мес€ц
 *                      3   за последнюю неделю
 *                      4   за последние сутки
 *     
 *           ѕри отсутствии параметров выборка выполн€етс€ за последние полгода           
 *     
 * result:  список таблиц с параметрами:
 *          
 *          "contactid":    идентификатор контакта
 *          "name":         им€ контакта.
 *          "members":      номер телефона (дл€ конференции номера через зап€тую)
 *          "time":         врем€ последнего звонка (в миллисекундах от 01.01.1970)
 *          "status":       статус последнего звонка:
 *                          5   вход€щий
 *                          6   исход€щий
 *                          12  пропущенный (новый)
 *                          13  вход€щий без ответа
 *                          14  исход€щий без ответа
 *          "duration":     длительность последнего звонка.
 
 *          "lost":         количество пропущенных звонков (с момента предыдущего запроса)
 *          "count":        общее количество звонков за период
 */

"getCallsHistory": {
    "type":                 "method",
    "target":               "server",
    "description":          "List of calls",
    
    "params": {
    },

    "result": [
        {
            "contactid":    "string",
            "name":         "string",
            "members":      "string",
            "time":         "number",
            "lost":         "number",
            "count":         "number",
            "status":        "number",
            "duration":      "number",
        }
    ],
    
},


/* 
 * «аписать информацию пользовател€
 * 
 * method:  "setUserInfo"
 * 
 * params:  
 *          "userid":   идентификатор пользовател€ 
 *          "position": 
 *          "birthday":
 *          "mail":
 *          "location":
 *          "title":
 *          "company":
 *          "description":
 *          "department":
 *          "about":
 *          "lastname":
 *          "firstname":
 *          "mobile":
 * 
 */

"setUserInfo": {
    "type":             "method",
    
    "params": {
        "userid":       "string",
        "position":     "string",
        "birthday":     "string",
        "mail":         "string",
        "mobile":       "string",
        "firstname":    "string",
        "lastname":     "string",
        "location":     "string",
        "department":   "string",
        "company":      "string",
        "title":        "string",
        "description":  "string",
        "about":        "string",
    },
},


/* 
 * ѕолучить информацию пользовател€
 * 
 * method:  "getUserInfo"
 * 
 * params:  
 *          "userid":   идентификатор пользовател€ 
 *          
 * result:  
 *          "position": 
 *          "birthday":
 *          "mail":
 *          "location":
 *          "title":
 *          "company":
 *          "description":
 *          "department":
 *          "about":
 *          "lastname":
 *          "firstname":
 *          "mobile":
 * 
 */

"getUserInfo": {
    "type":             "method",
    
    "params": {
        "userid":       "string",
    },
    
    "result": {
        "position":     "string",
        "birthday":     "string",
        "mail":         "string",
        "mobile":       "string",
        "firstname":    "string",
        "lastname":     "string",
        "location":     "string",
        "department":   "string",
        "company":      "string",
        "title":        "string",
        "description":  "string",
        "about":        "string",
    },
},


/* 
 * ”становить список номеров и транков дл€ записи разговоров
 * 
 * method:  "setVoiceRecordingList"
 * 
 * params:  список параметров
 * 
 *          "trunks":        список идентификаторов транков
 *          "trunksmode":    тип списка идентификаторов
 *                           0 - список дл€ записи (записываютс€ только те, которые есть в списке)
 *                           1 - список исключений (записываютс€ все, кроме тех, которые в списке)
 *                           
 *          "extensions":   список внутренних номеров
 *          "extmode":      тип списка номеров
 *                           0 - список дл€ записи (записываютс€ только те, которые есть в списке)
 *                           1 - список исключений (записываютс€ все, кроме тех, которые в списке)
 * 
 */

"setVoiceRecordingList": {
    
    "type":             "method",
    
    "params": {
        "trunksmode":   "integer",
        "trunks":       ["string"],
        "extmode":      "integer",
        "extensions":   ["string"],
    }
},


/* 
 * ѕолучить список номеров и транков дл€ записи разговоров
 * 
 * method:  "getVoiceRecordingList"
 * 
 * result:  список параметров
 * 
 *          "trunks":        список идентификаторов транков
 *          "trunksmode":    тип списка идентификаторов
 *                           0 - список дл€ записи (записываютс€ только те, которые есть в списке)
 *                           1 - список исключений (записываютс€ все, кроме тех, которые в списке)
 *                           
 *          "extensions":   список внутренних номеров
 *          "extmode":      тип списка номеров
 *                           0 - список дл€ записи (записываютс€ только те, которые есть в списке)
 *                           1 - список исключений (записываютс€ все, кроме тех, которые в списке)
 * 
 */

"getVoiceRecordingList": {
    
    "type":             "method",

    "params": {    
    },
    
    "result": {
        "trunksmode":   "integer",
        "trunks":       ["string"],
        "extmode":      "integer",
        "extensions":   ["string"],
    }
},

/*
 *  Method "getRoutes"
 *  
 *  ѕолучить список маршрутов по объекту
 *
 *  params: 
 *          "oid":      идентификатор объекта
 *          
 *  result: list of maps:
 *          "id":        идентификатор роута    
 *          "ext"        внутренний номер    
 *                      
 */

"getRoutes": {
    
    "type":             "method",
    
    "getRoutes": {
        "oid":          "string", 
    },
    
    "result": [
        {
            "id":       "string",
            "ext":      "string",
        }
    ],
},

/*
 *  Method "getDirectoryUsers"
 *  
 *  ѕолучить список пользователей из директори€
 *
 *  params: 
 *          "username":     логин
 *          "password":     пароль
 *          "domain":       домен
 *          "ou":           подразделение
 *          
 *  result: список пользователей:
 *          "dn":           им€ пользовател€ ("distinguishedName")
 *          "cn":           им€ пользовател€
 *          "login":        логин пользовател€
 *          "ext":          внутренний номер PBX
 *          "attributes":   атрибуты пользовател€:
 *                          "<directoryAttributeUID>":  идентификатор пользовател€
 *                                                      "<directoryAttributeUID>":  им€ атрибута из параметра "ldap.directoryAttributeUID"
 *
 *                          "<directoryAttributePhone>":внутренний номер
 *                                                      "<directoryAttributePhone>":  им€ атрибута из параметра "ldap.directoryAttributePhone"
 *
 *                          "description":              
 *                          "company":
 *                          "department":
 *                          "title":
 *                          "mail":
 *                          "mobile":
 *                          "displayName":
 */

"getDirectoryUsers": {
    
    "type":             "method",
    
    "params": {
        "username":          "string", 
        "password":          "string",
        "domain":            "string", 
        "ou":                "string", 
    },
    
    "result": [
        {
            "dn":                               "string",
            "cn":                               "string",
            "login":                            "string",
            "ext":                              "string",
            "attributes"{
                "<directoryAttributeUID>":      "string",
                "<directoryAttributePhone>":    "string",
                "description":                  "string",
                "company":                      "string",
                "department":                   "string",
                "title":                        "string",
                "mail":                         "string",
                "mobile":                       "string",
                "displayName":                  "string",
            },
        },
    ],
},


/*
 *  Method "setDirectoryUsers"
 *  
 *  —оздать пользователей
 *
 *  params: 
 *          "username":     логин
 *          "password":     пароль
 *          "domain":       домен
 *          "users":        список пользователей:
 *                          "dn":           им€ пользовател€ ("distinguishedName")
 *                          "cn":           им€ пользовател€
 *                          "login":        логин пользовател€
 *                          "ext":          внутренний номер
 *                          "attributes":   атрибуты пользовател€:
 *                              "<directoryAttributeUID>":  идентификатор пользовател€
 *                                                      "<directoryAttributeUID>":  им€ атрибута из параметра "ldap.directoryAttributeUID"
 *
 *                              "<directoryAttributePhone>":внутренний номер
 *                                                      "<directoryAttributePhone>":  им€ атрибута из параметра "ldap.directoryAttributePhone"
 *
 *                              "description":              
 *                              "company":
 *                              "department":
 *                              "title":
 *                              "mail":
 *                              "mobile":
 *                              "displayName":
 *          
 *  result:
 *          none
 */

"setDirectoryUsers": {
    
    "type":             "method",
    
    "params": {
        "username":          "string", 
        "password":          "string", 
        "domain":            "string",
        "users": [
            {
                "dn":                               "string",
                "cn":                               "string",
                "login":                            "string",
                "ext":                              "string",
                "attributes"{
                    "<directoryAttributeUID>":      "string",
                    "<directoryAttributePhone>":    "string",
                    "description":                  "string",
                    "company":                      "string",
                    "department":                   "string",
                    "title":                        "string",
                    "mail":                         "string",
                    "mobile":                       "string",
                    "displayName":                  "string",
                },
            },
        ],
    },  
},

/*
 *  Method "getExternalUsers"
 *  
 *  ѕолучить список пользователей внешнего сервиса
 *
 *  params: 
 *          "service_id":   идентификатор сервиса
 *          "username":     логин (зарезервировано дл€ сервисов с типом 3)
 *          "password":     пароль (зарезервировано дл€ сервисов с типом 3)
 *          "domain":       домен (зарезервировано дл€ сервисов с типом 3)
 *          
 *  result: список пользователей:
 *          "uid":          идентификатор пользовател€
 *          "name":         полное им€ пользовател€
 *          "login":        логин пользовател€
 *          "ext":          внутренний номер PBX
 *          "attributes":   атрибуты пользовател€
 *
 */

"getExternalUsers": {
    
    "type":             "method",
    
    "params": {
        "service_id":        "string", 
        "username":          "string", 
        "password":          "string",
        "domain":            "string", 
    },
    
    "result": [
        {
            "uid":           "string",
            "name":          "string",
            "login":         "string",
            "ext":           "string",
            "attributes"{
                "<key>":     "string",
                ...
            },
        },
    ],
},


/*
 *  Method "setExternalUsers"
 *  
 *  —оздать пользователей
 *
 *  params: 
 *          "service_id":   идентификатор сервиса
 *          "username":     логин (если был в методе "getExternalUsers")
 *          "password":     пароль (если был в методе "getExternalUsers")
 *          "domain":       домен (если был в методе "getExternalUsers")
 *          "users":        список пользователей:
 *                          "uid":          идентификатор пользовател€
 *                          "name":         полное им€ пользовател€
 *                          "login":        логин пользовател€
 *                          "ext":          внутренний номер PBX
 *                          "attributes":   атрибуты пользовател€ (зарезервировано)
 *          
 *  result:
 *          none
 */

"setExternalUsers": {
    
    "type":                     "method",
    
    "params": {
        "service_id":           "string", 
        "username":             "string", 
        "password":             "string", 
        "domain":               "string",
        "users": [
            {
                "uid":          "string",
                "name":         "string",
                "login":        "string",
                "ext":          "string",
                "attributes"{
                    "<key>":    "string",
                    ...
                },
            },
        ],
    },  
},


/*
 *  Method "deleteUserService"
 *  
 *  ”далить ассоциацию пользовател€ с внешним сервисом
 *
 *  params: 
 *          "service_id":   идентификатор сервиса
 *          "userid":     идентификатор пользовател€
 *
 *          
 *  result:
 *          none
 */

"deleteUserService": {
    
    "type":                     "method",
    
    "params": {
        "service_id":           "string", 
        "userid":             "string"
    }
},


/*************************************************************************************************************
 *  ќписание объектов бранча
 *************************************************************************************************************/

/*
 *  Object "PbxExtension"
 *  
 *  params: параметры профил€ внутреннего номера, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта:
 *                          "phone" - терминал
 *                          "user"  - пользователь
 *                          
 *          "name":         им€
 *          "number":       внутренний номер телефона
 *          "display":      им€, предназначенное дл€ отоборажени€ на дисплее телефона
 *          "enabled":      состо€ние включен/выключен (значени€ yes или no)
 *          "groupid":      идентификатор группы
 *          "followme":     реальный номер телефона
 *          "login":        логин пользовател€
 *          "password":     пароль пользовател€
 *          "pin":          пин код дл€ управлени€ своим профилем с телефонного аппарата (с помощью ƒ“ћ‘)
 *          "lock":         блокировка изменений профил€ с телефонного аппарата
 *          "clir":         запрет отображени€ обратного номера
 *          "dnd":          функци€ "не беспокоить"
 *          "fwdall":       функци€ безусловной переадресации
 *          "fwdbusy":      функци€ переадресации по зан€то
 *          "fwdnans":      функци€ переадресации по неответу
 *          "fwdnreg":      функци€ переадресации при отсутствии регистрации в системе
 *          "pickupdeny":   запрет перехвата звонка с другого телефона
 *          "busyoverdeny": запрет вторжени€ в разговор
 *          "monitordeny":  запрет подключени€ к разговору в режиме прослушивани€
 *          "callwaiting":  функци€ "ожидающий вызов"
 *          "huntbusy":     функци€ хантинга при зан€тости номера
 *          "huntnans":     функци€ хантинга при неответе
 *          "huntnreg":     функци€ хантинга при отсутствии регистраци
 *          "recording":    запись разговоров
 *          "voicemail":    функци€ "голосова€ почта"
 *          "fwdallnumber": номер телефона дл€ безусловной переадресации
 *          "fwdbusynumber": номер телефона дл€ переадресации по зан€то
 *          "fwdnansnumber": номер телефона дл€ переадресации по неответу
 *          "fwdnregnumber": номер телефона дл€ переадресации при отсутствии регистрации
 *          "fwdtimeout":   врем€ в секундах, по истечении которого выполн€етс€ переадресаци€ по неответу
 *          "huntingnumbers": список номеров поиска (при включенном хантинге)
 *          
 */
"PbxExtension": {
    "type": "object",
    "params": {
        "oid":      "string",
        "kind":     "string",
        "name":     "string",
        "number":   "string",
        "display":  "string",
        "enabled":  "boolean",
        "groupid":  "string",
        "followme": "string",
        "login":    "string",
        "password": "string",
        "pin":      "integer",
        "features": {
            "lock":         "boolean",
            "clir":         "boolean",
            "dnd":          "boolean",
            "fwdall":       "boolean",
            "fwdbusy":      "boolean",
            "fwdnans":      "boolean",
            "fwdnreg":      "boolean",
            "pickupdeny":   "boolean",
            "busyoverdeny": "boolean",
            "monitordeny":  "boolean",
            "callwaiting":  "boolean",
            "huntbusy":     "boolean",
            "huntnans":     "boolean",
            "huntnreg":     "boolean",
            "recording":    "boolean",
            "voicemail":    "boolean",
            "fwdallnumber": "string",
            "fwdbusynumber":"string",
            "fwdnansnumber":"string",
            "fwdnregnumber":"string",
            "fwdtimeout":   "integer",
            "huntingnumbers":["string"]
        },
    }
},


/*
 *  Object "PbxGroup"
 *
 *  params: параметры объекта, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта:
 *                          "equipment" - группа терминалов
 *                          "unit"  - группа номеров
 *                          "users" - группа пользователей
 *                          "hunting"  - группа поиска
 *                          "pickup"  - группа перехвата
 *                          "icd"  - группа обслуживани€ вход€щих вызовов
 *                          "conference"  - группа конференц-вызова
 *                          
 *          "name":         им€ объекта
 *          "enabled":      состо€ние включен/выключен (значени€ yes или no)
 *          "members":      список внутренних номеров, которые вход€т в данную группу
 *          "available":    список внутренних номеров, которые могут быть добавлены в данную группу
 *          
 *          "options":      настройки группы (список в зависимости от типа группы).
 *          
 *                          тип объекта "equipment":
 *                          
 *                          "equipment":    тип оборудовани€:
 *                                          "ipphones" - IP телефоны
 *                                          "gateway"  - VoIP шлюз с регистрацией на сервере
 *                                          "trunk"    - VoIP транк
 *                                          
 *                          "protocol":     протокол подключени€. ¬озможные значени€:
 *                                          "sip", "sips"
 *                          
 *                          "gateway":   
 *                              "regname":  логин дл€ регистрации на сервере
 *                              "regpass":  пароль дл€ регистрациеи на сервере
 *                                       
 *                          "trunk":                
 *                              "domain":   IP адрес или доменное им€
 *                              "register": транк с регистрацией (yes/no)    
 *                              "user":     им€ пользовател€
 *                              "auth":     логин
 *                              "pass":     пароль
 *                              "regexpires": интервал подтверждени€ регистрации
 *                              "proxy":    регистраци€ на прокси сервере (yes/no)
 *                              "paddr":    адрес прокси сервера
 *                              "pauth":    логин дл€ прокси сервера
 *                              "ppass":    пароль дл€ прокси сервера
 *                              
 *                          "phonelines":   количество линий на телефоне
 *                          "starflash":    разрешение использовать кнопку телефона [*] в качестве кнопки постановки на холд
 *                                          
 *                          тип объекта "unit":
 *                          "huntmode": режим поиска:
 *                                      0 - выключен
 *                                      1 - циклический по списку номеров
 *                                      2 - завершаетс€ на последнем номере списка
 *                          "timeout":  таймаут набора номера
 *                          "huntfwd":  разрешение переадресации при хантинге
 *                          "groupno":  номер группы дл€ функции перехвата звонка
 *                          
 *                          тип объекта "hunting":
 *                          "huntmode": режим поиска:
 *                                      1 - последовательный
 *                                      3 - параллельный
 *                          "timeout":  таймаут набора номера
 *                          "huntfwd":  разрешение переадресации при хантинге
 *                          
 *                          тип объекта "pickup":
 *                          "groupno":  номер группы дл€ функции перехвата звонка
 *                          
 *                          тип объекта "icd":
 *                          "groupno":      номер группы дл€ функции регистрации в группе
 *                          "autologin":    автоматическа€ регистраци€ в группе при регистрации в системе
 *                          "priority":     приоритет группы
 *                          "maxlines":     максимальное количество одновременных вход€щих соединений
 *                          "canpickup":    разрешение перехвата вызовов в группе
 *                          "method":       метод распределени€ вызовов
 *                          "natimeout":    таймаут неответа на вызов
 *                          "resumetime":   врем€ восстановлени€ готовности номера прин€ть вызов (после завершени€ предыдущего вызова)
 *                          "greeting":     файл приветстви€, проигрываемый при приеме вход€щего вызова
 *                          "queuelen":     длина очереди
 *                          "maxqwait":     максимальное врем€ ожидани€ в очереди
 *                          "indicationmode": режим рассылки звуковой индикации о наличии вызовов в очереди
 *                          "indicationtime": период рассылки звуковой индикации о наличии вызовов в очереди
 *                          "overflowredirect": переадресаци€ при переполнении очереди
 *                          "overtimeredirect": переадресаци€ при превышении времени ожидани€ в очереди
 *                          
 *                          тип объекта "conference":
 *                          "initmode":     режим первоначального подключени€ абонентов
 *                          "dialtimeout":  таймаут набора номера
 *                          "autoredial":   повторный автодозвон
 *                          "greeting":     проигрывать приветствие при подключении абонента
 *                          "videomode":    режим видеоконференции. ¬озможные значени€:
 *                                          "OFF", "320x240", "352x288", "640x360", "640x480", "704x576", "1024x768", "1280x720", "1920x1080"
 *                          "maxvideomode": максимальный разрешенный режим видеоконференции
 *                          
 *          "profile":      разрешени€ использовани€ функций дл€ профилей внутренних номеров, вход€щих в данную группу.
 *                          (“олько дл€ групп типа "equipment", "unit" или "users").
 *                          "hold":         функци€ "удержание вызова"
 *                          "forwarding":   функци€ "переадресаци€ вызова"
 *                          "callpickup":   функци€ "перехват вызова"
 *                          "dndover":      преодоление режима "не беспокоить"
 *                          "busyover":     функци€ "вторжение в разговор"
 *                          "clir":         функци€ "запрет передачи номера абонента"
 *                          "dnd":          функци€ "не беспокоить"
 *                          "pickupdeny":   функци€ "запрет перехвата вызова"
 *                          "busyoverdeny": функци€ "запрет вторжени€ в разговор"
 *                          "monitordeny":  функци€ "запрет подключени€ в разговору в режиме прослушивани€"
 *                          "callwaiting":  функци€ "ожидающий вызов"
 *                          "outcallbarring":   запрет выполнени€ вызовов на внешние номера
 *                          "costroutebarring": запрет выполнени€ вызовов на внешние номера, если установлен тариф
 *                          "recording":    функци€ "запись разговоров"
 *                          "voicemail":    функци€ "голосова€ почта"
 *                          "bnumbertransforms":таблица преобразовани€ номеров дл€ исход€щих звонков:
 *                                              "number":   вызываемый номер или префикс вызываемого номера
 *                                              "strip":    признак отрезани€ префикса
 *                                              "prefix":   добавл€емый префикс
 *                          
 */
"PbxGroup":{
    "type": "object",
    "params": {
        "oid":          "string",
        "kind":         "string",
        "name":         "string",
        "enabled":      "boolean",
        //"status":     "string",
        "members":      ["string"],
        "available":    ["string"],
        
        "options": {
            /* "kind": "equipment" */
            "equipment":        "string",
            "protocol":         "string",
            /* For "equipment":"gateway" */
            "gateway": {
                "regname":      "string",
                "regpass":      "string",
            },
            /* For "equipment":"trunk" */
            "trunk": {
                "register":     "boolean",
                "domain":       "string",
                "user":         "string",
                "auth":         "string",
                "pass":         "string",
                "proxy":        "boolean",
                "paddr":        "string",
                "pauth":        "string",
                "ppass":        "string",
                "regexpires":   "integer",
            },
            
            "codecs": [
                {
                "codec":    "string",
                "frame":    "integer",
                }
            ],
            "buffering":    "boolean",
            "earlymedia":   "boolean",
            "t38fax":       "boolean",
            "video":        "boolean",
            "dtmfrelay":    "boolean",
            "dtmfmode":     "string",
            "t1":           "integer",
            "t2":           "integer",
            "t3":           "integer",
            "noprogress":   "boolean",
            "nosymnat":     "boolean",
            "noredirectinfo":   "boolean",
            "h323": {
                "faststart":    "boolean",
                "h245tunneling":"boolean",
                "playringback": "boolean",
                "isdnatype":    "string",
                "isdnaplan":    "string",
                "isdnbtype":    "string",
                "isdnbplan":    "string",
                "presentation": "boolean",
            },
            "sip":{
                "nowaitack":    "boolean",
            },
            "phonelines":       "integer",
            "starflash":        "boolean",
            
            /* "kind": "unit"] */
            "huntmode":         "integer",
            "timeout":          "integer",
            "huntfwd":          "boolean",
            "groupno":          "string",

            /* "kind": "hunting" */
            "huntmode":         "integer",
            "timeout":          "integer",
            "huntfwd":          "boolean",

            /* "kind": "pickup" */
            "groupno":          "string",
            
            /* "kind": "icd" */
            "groupno":          "string",
            "autologin":        "boolean",
            "priority":         "integer",
            "maxlines":         "integer",
            "canpickup":        "boolean",
            "method":           "integer",
            "natimeout":        "integer",
            "resumetime":       "integer",
            "greeting":         "string",
            "queuelen":         "float",
            "maxqwait":         "integer",
            "indicationmode":   "integer",
            "indicationtime":   "integer",
            "overflowredirect": "string",
            "overtimeredirect": "string",

            /* "kind": "conference" */
            "initmode":         "integer",
            "dialtimeout":      "integer",
            "autoredial":       "boolean",
            "greeting":         "boolean",
            "videomode":        "string",
            "maxvideomode":     "string",
        },

        /* for "kind": "equipment", "unit" or "users" */
        "profile": {
            "hold":             "boolean",
            "forwarding":       "boolean",
            "callpickup":       "boolean",
            "dndover":          "boolean",
            "busyover":         "boolean",
            "monitor":          "boolean",
            "clir":             "boolean",
            "dnd":              "boolean",
            "pickupdeny":       "boolean",
            "busyoverdeny":     "boolean",
            "monitordeny":      "boolean",
            "callwaiting":      "boolean",
            "outcallbarring":   "boolean",
            "costroutebarring": "boolean",
            "recording":        "boolean",
            "voicemail":        "boolean",
            "bnumbertransforms": [
                {
                    "number":   "string",
                    "strip":    "boolean",
                    "prefix":   "string"
                }
            ]
        },
    }    
},


/*
 *  Object "Trunk"
 *
 *  params: параметры транка, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор транка
 *          "name":         им€ транка
 *          "enabled":      состо€ние: 
 *                          true - включен
 *                          false - выключен
 *          "status":       строка описани€ состо€ни€
 *          "deviceid":     идентификатор девайса (в setObject клиент должен присылать идентификатор, который получен от сервера в getObject)
 *          "protocol":     протокол: sip / sips / wss / h323
 *          
 *          "type":         тип транка:
 *                          "external" - внешний транк
 *                          "internal" - внутренний транк (с регистрацией на сервере)
 *                          
 *          ѕараметры внешнего транка:
 *          "domain":       IP адрес или доменное им€ сервиса
 *          "register":     true - сервис с регистрацией / false - сервис без регистрации
 *          "user":         им€ пользовател€ (номер телефона)
 *          "auth":         им€ пользовател€ (логин)
 *          "pass":         пароль пользовател€
 *          "proxy":        true - с прокси / false - без прокси
 *          "paddr":        IP адрес или доменное им€ SIP прокси
 *          "pauth":        им€ пользовател€ дл€ прокси
 *          "ppass":        пароль пользовател€ дл€ прокси
 *          
 *          ѕараметры внутреннего транка:
 *          "user":         им€ пользовател€
 *          "pass":         пароль пользовател€
 *          
 *          
 *          "parameters":   параметры (настройки) протокола
 *                          
 *                          "codecs":   таблица кодеков:
 *                                      "codec":    им€ кодека: "G.711 Alaw", "G.711 Ulaw", "G.729", "G.723", "Opus"
 *                                      "frame":    длительность одного фрейма в миллисекундах
 *                                      
 *                          "transcoding":  разрешить/запретить транскодинг
 *                          "buffering":    разрешить/запретить буферизацию
 *                          
 *                          "maxinbounds":  количество вход€щих линий
 *                          "maxoutbounds": количество вход€щих линий
 *                          
 *                          "inboundanumbertransforms": таблица преобразовани€ вход€щего обратного номера
 *                          "inboundbnumbertransforms": таблица преобразовани€ вход€щего пр€мого номера
 *                          "outboundanumbertransforms": таблица преобразовани€ исход€щего обратного номера
 *                          "outboundbnumbertransforms": таблица преобразовани€ исход€щего пр€мого номера
 */
"Trunk":{
    "type": "object",
    "params": {
        "oid":              "string",
        "name":             "string",
        "enabled":          "boolean",
        "status":           "string",
        "deviceid":         "string",
        "protocol":         "string",
        "type":             "string",
        "domain":           "string",
        "register":         "boolean",
        "user":             "string",
        "auth":             "string",
        "pass":             "string",
        "proxy":            "boolean",
        "paddr":            "string",
        "pauth":            "string",
        "ppass":            "string",
        "parameters": {
            "codecs": [
                {
                "codec":    "string",
                "frame":    "integer",
                }
            ],
            //"directrtp":    "boolean",
            "transcoding":  "boolean",
            "buffering":    "boolean",
            "earlymedia":   "boolean",
            "t38fax":       "boolean",
            "video":        "boolean",
            "dtmfrelay":    "boolean",
            "dtmfmode":     "string",
            "t1":           "integer",
            "t2":           "integer",
            "t3":           "integer",
            "regexpires":   "integer",
            "noprogress":   "boolean",
            "nosymnat":     "boolean",
            "noredirectinfo":   "boolean",
            "passanumber":  "boolean",
            "h323": {
                "faststart":    "boolean",
                "h245tunneling":"boolean",
                "playringback": "boolean",
                "isdnatype":    "string",
                "isdnaplan":    "string",
                "isdnbtype":    "string",
                "isdnbplan":    "string",
                "presentation": "boolean",
            },
            "sip":{
                "nowaitack":    "boolean",
            }
        },
        "maxinbounds":      "integer",
        "maxoutbounds":     "integer",
        "inboundanumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "inboundbnumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "outboundanumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "outboundbnumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
    }    
},

/*
 *  Object "PbxApplication"
 *
 */
"PbxApplication":{
    "type": "object",
    "params": {
        "oid":          "string",
        "name":         "string",
        "enabled":      "boolean",
        "status":       "string",
        "parameters": [
            {
                "key":      "string",
                "value":    "string",
            }                
        ],
        "debug":        "boolean",
        "dbconnection": {
            "driver":   "string",
            "url":      "string",
            "schema":   "string",
            "username": "string",
            "password": "string",            
        },
    }
},

/*
 *  Object "ChatChannel"
 *
 *  params: параметры объекта, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта: "chatchannel"
 *          "name":         им€ объекта
 *          "enabled":      состо€ние включен/выключен (значени€ yes или no)
 *          "members":      список пользователей которые вход€т в данную группу:
 *                          "oid":      идентификатор пользовател€
 *                          "number":   внутренний номер
 *                          "name":     им€
 *                          "state":    состо€ние
 *                          "display":  им€
 *                          "reg":      регистраци€
 *
 *          "replytimeout": таймаут неответа на сообщение (в секундах).
 *                          ≈сли в указанное врем€ пользователь, который обслуживает чат не ответил на сообщение,
 *                          сесси€ возвращаетс€ в общую очередь группы
 *
 */
"ChatChannel":{
    "type": "object",
    "params": {
        "oid":          "string",
        "kind":         "string",
        "name":         "string",
        "enabled":      "boolean",
        "members": [
            {
                "oid"       "string",
                "number"    "string",
                "state"     "number",
                "name"      "string",
                "display"   "string",
                "reg"       "string",
            }
        ],
        "replytimeout":     "number",
    }
},

/*
 *  Object "ChatTrunk"
 *
 *  params: параметры чат-транка, которые могут быть получены методом getObject или установлены методом setObject
 * 
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта: "chattrunk"
 *          "name":         им€ объекта
 *          "enabled":      состо€ние включен/выключен (значени€ yes или no)
 *
 *          "type":         тип чат-транка ("FacebookMessenger", "Twitter", "Webchat", "Viber")
 *          "pageid":       идентификатор страницы
 *          "pagename":     им€ страницы
 *
 *          "properties":   настройки - список параметров дл€ подключени€ чат-транка (access_token, pageid).
 *                          ѕередаютс€ один раз при создании транка.
 *
 *          "routes":       маршрутизаци€ запросов на открытие чатов
 *                          "target":   объект маршрута типа "channel", "user" или "chatbot" (в будущем)
 *                                      "oid":          идентификатор объекта
 *                                      "name":         им€ объекта
 *
 *                          "priority": приоритет (пока не используетс€)
 *  
 *                          "timeout":  таймаут неответа на вызов в секундах (пока не используетс€)
 *                                      ≈сли в указанное врем€ никто не ответил на сообщение, выбираетс€ следующий по приоритету маршрут 
 *          
 *          "sessiontimeout": таймаут сессии в секундах. Eсли не было сообщений в течение указанного времени, сесси€ закрываетс€.
 *                                          
 */
"ChatTrunk":{
    "type": "object",
    "params": {
        "oid":          "string",
        "name":         "string",
        "enabled":      "boolean",
        "type":         "string",
        "pageid":       "string",
        "pagename":     "string",
        "properties": {
            "<key>":    "<value>",
        },
        "routes": [
            {
                "target": {
                    "oid":      "string",
                    "name":     "string",            
                },
                "priority":     "number",
                "timeout":      "number",
            }                
        ],
        "sessiontimeout":   "number",
    }
},


/*************************************************************************************************************
 *  Ќотификаци€ от сервера клиенту
 *************************************************************************************************************/

/*
 *  Method "objectCreated"
 *  Ќотификаци€ о создании объекта
 *
 *  params: объект ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
 */

"objectCreated": {
    "type":         "indication",
    "params": {
        "enum":     ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    },
},

/*
 *  Method "objectUpdated"
 *  
 *  Ќотификаци€ об изменении параметров объекта
 *
 *  params: список параметров
 *  
 *          "oid":           идентификатор объекта
 *          "name":          им€ объекта
 *          "kind":          тип объекта:
 *                           "equipment" - группа оборудовани€
 *                           "users" - группа пользователей
 *                           "unit" - организационна€ группа
 *                           "user" - пользователь
 *                           "phone" - телефон
 *                           
 *          ѕараметр дл€ объектов типа "equipment", "users" или "unit":
 *                           
 *          "pmask":         маска профил€ группы
 *          
 *          
 *          ѕараметры дл€ объектов типа "user" или "phone":
 *          
 *          "userid":   логин пользовател€
 *          "ext":      внутренний номер
 *          "group":    им€ группы
 *          "groupid":  идентификатор группы
 *          "fmask":    маска профил€ пользовател€
 *          "reg":      IP адрес регистрации
 *          "state":    состо€ние
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресаци€ на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исход€щий вызов
 *                      7 - вход€щий вызов
 *                      8 - соединен
 */

"objectUpdated": {
    "type":         "indication",
    
    "params": {
        "oid":      "string",
        "name":     "string",
        "kind":     "string",
        
        "pmask":    "integer",
        
        "userid":   "string",
        "ext":      "string",
        "group":    "string",
        "groupid":  "string",
        "fmask":    "integer",
        "reg":      "string",
        "state":    "integer",
    },
},

/*
 *  Method "objectDeleted"
 *  
 *  Ќотификаци€ об удалении объекта
 *
 *  params: "oid" - идентификатор объекта
 */

"objectDeleted": {
    "type":         "indication",
    "params": {
        "oid":      "string"
    }
},


/*************************************************************************************************************
 *  ћетоды админа
 *************************************************************************************************************/

/*
 *  Method "getBranchOptions"
 *  
 *  ѕолучить настройки бранча
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *          
 *  result: список параметров:
 *          
 *          "name":         им€ бранча
 *          "lang":         €зык интерфейса
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "enabled":      статус:
 *                          true - активен
 *                          false- выключен
 *          "config":       конфигураци€ бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *          "storesize":    использованный размер файлового хранилища
 *
 *          "ldap":         параметры подключени€ к серверу Active Directory
 *                          "directoryServer":          адрес сервера
 *                          "directorySSL":             ssl (true/false)
 *                          "directoryAttributeUID":    название атрибута идентификатора пользовател€.
 *                                                      ¬озможные значени€:
 *                                                      "userPrincipalName", "sAMAccountName", "uid", "name", "mail"
 *
 *                          "directoryAttributePhone":  название атрибута где записывать внутренний номер пользовател€
 *                                                      ¬озможные значени€: 
 *                                                      стандартные - "telephoneNumber", "mobile", "ipPhone" 
 *                                                      или другой атрибут на усмотрение администратора сервера
 *
 *                          "directoryDomains":         имена доменов (через пробел)
 *
 *                          "directoryAuth":            метод авторизации. ¬озможные значени€:
 *                                                      "simple", "DIGEST-MD5", "GSSAPI" (Kerberos v5)
 *
 *                          ѕараметры при выборе "directoryAuth":"GSSAPI"
 *                          "directoryKDC":         сервер KDC (если несколько - через пробел)
 *                          "directoryAdminServer": сервер логинов
 *
 *          "services"      список сервисов:
 *                          "id"    идентификатор сервиса
 *                          "name"  им€ сервиса
 *                          "type"  тип сервиса:
 *                                  1 - внешн€€ авторизаци€
 *                                  2 - хранилище файлов
 *                          "props" параметры сервиса:
 *                                   <им€ параметра> : <значение>
 */

"getBranchOptions": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string" 
    },

    "result": {
        "name":         "string",
        "lang":         "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "enabled":      "boolean",
        "config":       ["string"],
        "storesize":    "number",
        "storelimit":   "number",
        
        "ipcheck":      "boolean",
        "iptable": [
            {
                "net":  "string",
                "mask": "string",
            }
        ],
        
        "adminipcheck": "boolean",
        "adminiptable": [
            {
                "net":  "string",
                "mask": "string",
            }
        ],
        
        "ldap": {
            "directoryServer":          "string",
            "directorySSL":             "boolean",
            "directoryAttributeUID":    "string",
            "directoryAttributePhone":  "string",
            "directoryAuth":            "string",
            "directoryKDC":             "string",
            "directoryAdminServer":     "string",
            "directoryDomains":         "string",
        },
        
        "services": [
            {
                "id":                   "string",
                "name":                 "string",
                "type":                 "number",
                "props": {
                    <key>:              <value>,
                    ...
                },
            },
        ],

        "apikeys": {
            <key name>:         <key value>,
            ...
        },
    }
},


/*
 *  Method "setBranchOptions"
 *  
 *  »зменить настройки бранча
 *
 *  params: список параметров:
 *          
 *          "name":         им€ бранча
 *          "lang":         €зык интерфейса
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "enabled":      статус:
 *                          true - активен
 *                          false- выключен
 *          "config":       конфигураци€ бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *  
 *          "ldap":         параметры подключени€ к серверу Active Directory
 *                          "directoryServer":          адрес сервера
 *                          "directorySSL":             ssl (true/false)
 *                          "directoryAttributeUID":    название атрибута идентификатора пользовател€.
 *                                                      ¬озможные значени€:
 *                                                      "userPrincipalName", "sAMAccountName", "uid", "name", "mail"
 *
 *                          "directoryAttributePhone":  название атрибута где записывать внутренний номер пользовател€
 *                                                      ¬озможные значени€: 
 *                                                      стандартные - "telephoneNumber", "mobile", "ipPhone" 
 *                                                      или другой атрибут на усмотрение администратора сервера
 *
 *                          "directoryDomains":         имена доменов (через пробел)
 *
 *                          "directoryAuth":            метод авторизации. ¬озможные значени€:
 *                                                      "simple", "DIGEST-MD5", "GSSAPI" (Kerberos v5)
 *
 *                          ѕараметры при выборе "directoryAuth":"GSSAPI"
 *                          "directoryKDC":         сервер KDC (если несколько - через пробел)
 *                          "directoryAdminServer": сервер логинов
 *
 *          "services"      список сервисов:
 *                          "id"    идентификатор сервиса
 *                          "props" параметры сервиса:
 *                                   <им€ параметра> : <значение>
 */

"setBranchOptions": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string",
        "name":         "string",
        "lang":         "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "enabled":      "boolean",
        "config":       ["string"],
        "storelimit":   "number",
        
        "ipcheck":      "boolean",
        "iptable": [
            {
                "net":  "string",
                "mask": "string",
            }
        ]
        
        "adminipcheck": "boolean",
        "adminiptable": [
            {
                "net":  "string",
                "mask": "string",
            }
        ],
        
        "ldap": {
            "directoryServer":          "string",
            "directorySSL":             "boolean",
            "directoryAttributeUID":    "string",
            "directoryAttributePhone":  "string",
            "directoryAuth":            "string",
            "directoryKDC":             "string",
            "directoryAdminServer":     "string",
            "directoryDomains":         "string",
        },
        
        "services": [
            {
                "id":                   "string",
                "props": {
                    <key>:              <value>,
                    ...
                },
            },
        ],
    }
},

/*
 *  Method "createAPIKey"
 *  
 *  —оздать API Key. √енерирует ключ дл€ доступа к методам API бранча.
 *                    люч нужно устанавливать в параметре HTTP запроса:
 *                   Authorization: Bearer <API Key>
 *
 *  params: список параметров:
 *          
 *          "name":         Key name
 *  
 *  result: API Key
 */

"createAPIKey": {
    
    "type":             "method",
    
    "params": {
        "name":         "string" 
    },

    "result":           "string" 
},



/*
 *  Method "createBranch"
 *  
 *  —оздать бранч
 *
 *  params: список параметров:
 *          
 *          "name":         им€ бранча
 *          "lang":         €зык интерфейса
 *          "protocol":     протокол (по умолчанию "wss", но возможно "sip" или "sips")
 *          "prefix":       префикс бранча
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "config":       конфигураци€ бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *  
 *  result: идентификатор бранча
 */

"createBranch": {
    
    "type":             "method",
    
    "params": {
        "name":         "string",
        "lang":         "string",
        "protocol":     "string",
        "prefix":       "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "config":       ["string"],
        "storelimit":   "number",
    },
    
    "result":           "string" 
},


/*
 *  Method "deleteBranch"
 *  
 *  ”далить бранч
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *  
 */

"deleteBranch": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string" 
    },
},


/*
 *  Method "setBranchState"
 *  
 *  ”становить состо€ние бранча
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *          "enabled":      состо€ние:
 *                          true - включить
 *                          false- выключить
 *          "description":  описание (или код) состо€ни€
 *  
 */

"setBranchState": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string", 
        "enabled":      "boolean",
        "description":  "string",
    },
}


}