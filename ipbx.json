/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

{
  
/*
 * Method: "getExtensions"
 * 
 * Example:
 * -> {"method":"getExtensions"}
 * <- {"result":{ ["ext":"101", "oid":"234254761347", "name":"John Smith", "kind":"user", "groupid":"2364574722245", "state":1 ],[ ... ], ... } }
 * 
 * Parameters:
 *  none
 *          
 *  result: список номеров
 *          "ext":      номер
 *          "name":     имя объекта
 *          "kind":     тип объекта:
 *                      "user" - пользователь
 *                      "phone" - телефонный аппарат
 *                      "unit"  - группа телефонов
 *                      "hunting" - группа поиска
 *                      "icd" - группа обслуживания входящего вызова
 *                      "application" - приложение
 *                      "conference" -  конференц-группа
 *                      
 *          "groupid":  идентификатор группы (для объектов типа "user" или "phone")
 *          
 *          "state":    состояние (для объектов типа "user" или "phone")
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресация на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исходящий вызов
 *                      7 - входящий вызов
 *                      8 - соединен
 */
"getExtensions": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": [
        {
            "ext":          "string",
            "name":         "string",
            "kind":         "string",
            "groupid":      "string",
            "state":        "number",
        }
    ]
},


/*
 * Method: "getGroups"
 * 
 * Example:
 * 
 * -> { "method": "getGroups" }
 * <- { "result": { [ "oid": "2364574722245", "kind": "unit", "name": "Marketing Department" ], [ "oid": "1462547254547", "kind": "users", "name": "IT Department" ] } }
 * 
 * 
 *  params: none
 *          
 *  result: список групп
 *          "oid":      идентификатор группы
 *          "name"      имя группы
 *          "kind"      тип группы
 *                      "unit": группа телефонов
 *                      "users":группа пользователей
 *          "parentid": идентификатор вышестоящей группы (если есть)
 *          
 */
"getGroups": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": [
        {
        "oid":              "string",
        "name":             "string",
        "kind":             "string", // [  "users", "unit" ]
        "parentid":         "string",
        }
    ]
},

/*
 *  Method "getProfile"
 *  Получить параметры своего профиля
 *
 *  params: none
 *          
 *  result: таблица параметров
 *          "name":     имя
 *          "number":   номер
 *          "display":  имя, отображаемое на дисплее телефона
 *          "enabled":  состояние (false - выключен администратором)
 *          "groupid":  идентификатор группы
 *          "followme": номер телефона, на который адресуются звонки
 *          "features": настройки функций
 *                      "lock":     запрет/разрешение изменения настроек с телефонного аппарата
 *                      "clir":     запрет/разрешение отображения своего номера при звонке
 *                      "dnd":      функция "не беспокоить"
 *                      "fwdall":   включение/выключение безусловной переадресации
 *                      "fwdbusy":  включение/выключение переадресации по "занято"
 *                      "fwdnans":  включение/выключение переадресации по неответу
 *                      "fwdnreg":  включение/выключение переадресации при отсутствии регистрации
 *                      "pickupdeny":   запрет/разрешение перехвата вызова
 *                      "busyoverdeny": запрет/разрешение вторжения в разговор
 *                      "monitordeny":  запрет/разрешение прослушивания разговора
 *                      "callwaiting":  включение/выключение функции "Ожидающий вызов"
 *                      "huntbusy":     включение/выключение функции поиска, если номер занят
 *                      "huntnans":     включение/выключение функции поиска при неответе
 *                      "huntnreg":     включение/выключение функции поиска при отсутствии регистрации
 *                      "voicemail":    включение/выключение функции голосовой почты
 *                      "fwdallnumber": номер для безусловной переадресации
 *                      "fwdbusynumber":номер для переадресации по "занято"
 *                      "fwdnansnumber":номер для переадресации по неответу
 *                      "fwdnregnumber":номер для переадресации при отсутствии регистрации
 *                      "fwdtimeout":   таймаут для переадресации по неответу (в секундах)
 *                      "huntingnumbers": список номеров для поиска
 */
 "getProfile": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": {
        "name":             "string",
        "number":           "string",
        "display":          "string",
        "enabled":          "boolean",
        "groupid":          "string",
        "followme":         "string",
        "features": {
            "lock":         "boolean",
            "clir":         "boolean",
            "dnd":          "boolean",
            "fwdall":       "boolean",
            "fwdbusy":      "boolean",
            "fwdnans":      "boolean",
            "fwdnreg":      "boolean",
            "pickupdeny":   "boolean",
            "busyoverdeny": "boolean" ,
            "monitordeny":  "boolean",
            "callwaiting":  "boolean",
            "huntbusy":     "boolean",
            "huntnans":     "boolean",
            "huntnreg":     "boolean",
            "voicemail":    "boolean",
            "fwdallnumber":     "string",
            "fwdbusynumber":    "string",
            "fwdnansnumber":    "string",
            "fwdnregnumber":    "string",
            "fwdtimeout":       "number",
            "huntingnumbers":   ["string"]
        },
    }
 },
        

/*
 *  Method "setProfile"
 *  Установить параметры своего профиля
 *          
 *  params: таблица параметров
 *          "pin":      pin код для доступа к функциям с телефонного аппарата
 *          "display":  имя, отображаемое на дисплее телефона
 *          "followme": номер телефона, на который адресуются звонки
 *          "features": настройки функций
 *                      "lock":     запрет/разрешение изменения настроек с телефонного аппарата
 *                      "clir":     запрет/разрешение отображения своего номера при звонке
 *                      "dnd":      функция "не беспокоить"
 *                      "fwdall":   включение/выключение безусловной переадресации
 *                      "fwdbusy":  включение/выключение переадресации по "занято"
 *                      "fwdnans":  включение/выключение переадресации по неответу
 *                      "fwdnreg":  включение/выключение переадресации при отсутствии регистрации
 *                      "pickupdeny":   запрет/разрешение перехвата вызова
 *                      "busyoverdeny": запрет/разрешение вторжения в разговор
 *                      "monitordeny":  запрет/разрешение прослушивания разговора
 *                      "callwaiting":  включение/выключение функции "Ожидающий вызов"
 *                      "huntbusy":     включение/выключение функции поиска, если номер занят
 *                      "huntnans":     включение/выключение функции поиска при неответе
 *                      "huntnreg":     включение/выключение функции поиска при отсутствии регистрации
 *                      "voicemail":    включение/выключение функции голосовой почты
 *                      "fwdallnumber": номер для безусловной переадресации
 *                      "fwdbusynumber":номер для переадресации по "занято"
 *                      "fwdnansnumber":номер для переадресации по неответу
 *                      "fwdnregnumber":номер для переадресации при отсутствии регистрации
 *                      "fwdtimeout":   таймаут для переадресации по неответу (в секундах)
 *                      "huntingnumbers": список номеров для поиска
 *                      
 *  result: none
 */
 "setProfile": {
    "type":                 "method",
    
    "params": {
        "pin":              "number",
        "display":          "string",
        "followme":         "string",
        "features": {
            "lock":         "boolean",
            "clir":         "boolean",
            "dnd":          "boolean",
            "fwdall":       "boolean",
            "fwdbusy":      "boolean",
            "fwdnans":      "boolean",
            "fwdnreg":      "boolean",
            "pickupdeny":   "boolean",
            "busyoverdeny": "boolean" ,
            "monitordeny":  "boolean",
            "callwaiting":  "boolean",
            "huntbusy":     "boolean",
            "huntnans":     "boolean",
            "huntnreg":     "boolean",
            "voicemail":    "boolean",
            "fwdallnumber":     "string",
            "fwdbusynumber":    "string",
            "fwdnansnumber":    "string",
            "fwdnregnumber":    "string",
            "fwdtimeout":       "number",
            "huntingnumbers":   ["string"]
        },
    }
},

/*************************************************************************************************************
 *  Нотификация от сервера клиенту
 *************************************************************************************************************/

/* 
 * Изменение состояния объекта 
 * 
 * method:  "stateChanged"
 * 
 * params:  
 *          "oid":      идентификатор объекта
 *          "ext":      внутренний номер телефона
 *          "state":    состояние
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресация на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исходящий вызов
 *                      7 - входящий вызов
 *                      8 - соединен
 *                     -1 - удален
 *          
 *          "name":     имя
 *          "group":    имя группы
 *          "reg":      ip адрес или номер переадресации
 * 
 */

"stateChanged": {
    "type":             "indication",
    
    "params": {
        "oid":          "string",
        "ext":          "string",
        "state":        "number",
        "name":         "string",
        "group":        "string",
        "reg":          "string"
    }
},

/* 
 * Изменение состояния конференции 
 * 
 * method:  "conferenceUpdate"
 * 
 * params:  
 *          "oid":      идентификатор конференции
 *          "number":   номер телефона участника
 *          "state":    состояние
 *                      0 - отключился
 *                      1 - подключился
 *          "name":     имя участника
 * 
 */

"conferenceUpdate": {
    "type":             "indication",
    
    "params": {
        "oid":          "string",
        "number":       "string",
        "state":        "number",
        "name":         "string",
        "total":        "number",
    }
},

/*************************************************************************************************************
 *  Методы админа бранча
 *************************************************************************************************************/

/* 
 * Получить список текущих соединений.
 * 
 * method:  "getCurrentCalls"
 * 
 * params:  Нет
 * 
 * result:  список текущих соединений
 *          "caller":   вызывающий номер
 *          "called":   вызываемый номер
 *          "time":     длительность соединения (только для соединенных звонков
 * 
 */

"getCurrentCalls": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": [
        {
            "caller":       "string",
            "called":       "string",
            "time":         "number",
        }
    ]
},

/* 
 * Получить список соединений и загрузку по транкам.
 * 
 * method:  "getCurrentState"
 * 
 * params:  Нет
 * 
 * result:  таблица параметров:
 * 
 *          "in":       количество входящих соединений
 *          "out":      количество исходящих соединений
 *          "conn":     количество соединенных вызовов
 *          "load":     загрузка портов (в процентах)
 *          "trunks":   список транков
 *                      "id":   идентификатор транка
 *                      "name": имя транка
 *                      "in":   количество входящих соединений
 *                      "out":  количество исходящих соединений
 *                      "load": загрузка транка (в процентах)
 * 
 */

"getCurrentState": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": {
        "in":               "number",
        "out":              "number",
        "conn":             "number",
        "load":             "number",       
        "trunks": [
            {
                "id":       "string",
                "name":     "string",
                "in":       "number",
                "out":      "number",
                "load":     "number",
            }
        ]
    }
},


/* 
 * Получить историю звонков.
 * 
 * method:  "getCalls"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "number":   номер абонента. Если параметр отсутствует, выбираются все звонки
 *          "trunk":    имя транка
 *          "mode":     вид выборки:
 *                      0 - все звонки
 *                      1 - только соединенные звонки
 *                      2 - только внешние звонки
 *                      3 - только внешние соединенные звонки
 *                      4 - неудачные звонки
 *          "order":    порядок выборки:
 *                      0 - по возрастанию даты
 *                      1 - по убыванию даты
 *          "limit":    максимальное число записей в выборке
 * 
 * result:  список текущих соединений
 *          "ts":       штамп времени звонка (в миллисекундах от 1.01.1970)
 *          "na":       вызывающий номер
 *          "nb":       вызываемый номер
 *          "ta":       транк входящего соединения
 *          "tb":       транк исходящего соединения
 *          "nc":       исходящий номер
 *          "cs":       код завершения (стандартный код ISDN)
 *          "td":       длительность соединения
 *          "tr":       тариф
 *          "ch":       стоимость звонка
 *          "fi":       имя файла записи
 */

"getCalls": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "number":           "string",
        "trunk":            "string",
        "mode":             "number",
        "order":            "number",
        "limit":            "number",
    },
    
    "result": [
        {
            "ts":           "number",
            "na":           "string",
            "nb":           "string",
            "ta":           "string",
            "tb":           "string",
            "nc":           "string",
            "cs":           "number",
            "td":           "number",
            "tr":           "number",
            "ch":           "number",
            "fi":           "string",
        }
    ]
},


/* 
 * Получить статистику звонков.
 * 
 * method:  "getCallStatistics"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 * 
 * result:  таблица
 *          "inbounds"  статистика по входящим вызовам
 *                      "total":    общее количество вызовов
 *                      "lost":     количество потерянных вызовов
 *                      "duration": общее количество секунд
 *                      
 *          "outbounds":статистика по исходящим вызовам
 *                      "total":    общее количество вызовов
 *                      "connected":количество соединенных вызовов
 *                      "duration": общее количество секунд
 *                      "cost":     общая стоимость звонков
 *                      
 *          "internals" статистика по внутренним вызовам
 *                      "total":    общее количество вызовов
 *                      "duration": общее количество секунд
 *                      
 *          "trunks":   статистика по транкам
 *                      "trunk":    имя транка
 *                      "in":       количество входящих звонков
 *                      "insec":    количество минут входящих звонков
 *                      "out":      количество исходящих звонков
 *                      "outsec":   количество минут исходящих звонков
 *                      "cost":     стоимость исходящих звонков
 * 
 */

"getCallStatistics": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
    },
    
    "result": {
        "inbounds": {
            "total":        "number",
            "lost":         "number",
            "duration":     "number",            
        },
        "outbounds": {
            "total":        "number",
            "connected":    "number",
            "duration":     "number",            
            "cost":         "number",            
        },
        "internals": {
            "total":        "number",
            "duration":     "number",            
        },
        "trunks": [
            {
                "trunk":    "string",
                "in":       "number",
                "insec":    "number",
                "out":      "number",
                "outsec":   "number",
                "cost":     "number",
            }
        ]
    }
},


/* 
 * Получить статистику звонков по номерам.
 * 
 * method:  "getCallStatisticsExt"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "kind":     тип вызова
 *                      "inbound"   входящий
 *                      "outbound"  исходящий
 * 
 * result:  список таблиц данных:
 *          "ext":      номер телефона
 *          "total":    общее количество вызовов
 *          "connected":количество соединенных вызовов
 *          "duration": общее количество секунд
 *          "cost":     общая стоимость звонков
 * 
 */

"getCallStatisticsExt": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "kind":             "string",
    },
    
    "result": [
        {
            "ext":          "number",
            "total":        "number",
            "connected":    "number",
            "duration":     "number",            
            "cost":         "number",            
        }
    ]
},


/* 
 * Получить данные для временной диаграммы количества звонков.
 * 
 * method:  "getCallStatisticsGraph"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "interval": интервал выборки в миллисекундах
 *          "number":   номер телефона
 *          "trunk":    имя транка
 * 
 * result:  список:
 *          "t":        штамп времени начала интервала (в миллисекундах от 1.01.1970)
 *          "i":        количество входящих звонков в указанный интервал
 *          "o":        количество исходящих звонков в указанный интервал
 *          "l":        количество внутренних звонков в указанный интервал
 *          "m":        количество пропущенных входящих звонков в указанный интервал
 *          "is":        количество секунд входящих звонков за указанный интервал
 *          "os":        количество секунд исходящих звонков за указанный интервал
 *          "ls":        количество секунд внутренних звонков за указанный интервал
 * 
 */

"getCallStatisticsGraph": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "interval":         "number",
        "number":           "string",
        "trunk":            "string",
    },
    
    "result": [
        {
            "t":            "number",
            "i":            "number",
            "o":            "number",
            "l":            "number",
            "is":           "number",
            "os":           "number",
            "ls":           "number",
            "m":            "number",
        }
    ]
},


/* 
 * Получить данные для временной диаграммы количества занятых линий.
 * 
 * method:  "getLinesPayload"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "interval": интервал выборки в миллисекундах
 *          "trunk":    имя транка. При отсутствии возвращается общая загрузка PBX
 * 
 * result:  список:
 *          "t":        штамп времени начала интервала (в миллисекундах от 1.01.1970)
 *          "p":        усредненное количество занятых линий в указанный интервал
 * 
 */

"getLinesPayload": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "interval":         "number",
        "trunk":            "string",
    },
    
    "result": [
        {
            "t":            "number",
            "p":            "number",
        }
    ]
},


/* 
 * Получить историю потерянных вызовов.
 * 
 * method:  "getLostCalls"
 * 
 * params:  таблица параметров:
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "number":   номер абонента. Выбираются все не принятые звонки на этот номер.
 *                      Если параметр отсутствует, выбираются все потерянные входящие звонки
 *          "cause":    код завершения звонка
 * 
 * result:  список текущих соединений
 *          "ts":       штамп времени звонка (в миллисекундах от 1.01.1970)
 *          "na":       вызывающий номер
 *          "nb":       вызываемый номер
 *          "nc":       исходящий номер
 *          "cs":       код завершения (стандартный код ISDN)
 * 
 */

"getLostCalls": {
    "type":                 "method",
    
    "params": {
        "begin":            "number",
        "end":              "number",
        "number":           "string",
        "cause":            "number",
    },
    
    "result": [
        {
            "ts":           "number",
            "na":           "string",
            "nb":           "string",
            "ta":           "string",
            "tb":           "string",
            "nc":           "string",
            "cs":           "number",
        }
    ]
},


/* 
 * Включить/выключить объект
 * 
 * method:  "setObjectState"
 * 
 * params:  таблица параметров:
 *          "oid":      идентификатор объекта
 *          "enabled":  true / false
 * 
 * result:  нет
 * 
 */

"setObjectState": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
        "enabled":          "boolean",
    },
    
},


/*
 * Method: "getObject"
 * 
 * Example:
 * -> { "method": "getObject", "params": { "oid": "234254761347" }, "id":1 }
 * <- { "result": { "oid": "234254761347", name":"John Smith", "kind":"user", "number":"101", "enabled":true, "features":{...} }, "id":1 }
 * 
 * Parameters:
 *  "oid"   - object identifier
 *          
 * Returns:
 *  Properties of requested object. 
 */

"getObject": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
    },
    
    "result": {
        "enum": ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    }
},

/*
 * Method: "setObject"
 * 
 * Example:
 * -> { "method": "setObject", "params":{"oid": "234254761347", name":"Ozzy", "features":{"fwdall":true, "fwdallnumber":"335452222"}}, "id":1 }
 * <- { "result": "OK", "id":1 }
 * 
 * Parameters:
 *  All or any of object's parameters.
 *  Parameter "oid" must be present for update and must not be present for new created object
 *          
 * Returns:
 *  "result": "OK" - success
 *  or 
 *  "error": "message"
 */

"setObject": {
    "type":                 "method",
    
    "params": {
        "enum": ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    },
  
    "result":               "OK",
},


/*************************************************************************************************************
 *  Нотификация от сервера клиенту
 *************************************************************************************************************/

/*
 *  Method "objectCreated"
 *  Нотификация о создании объекта
 *
 *  params: объект ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
 */

"objectCreated": {
    "type":         "indication",
    "params": {
        "enum":     ["PbxExtension", "PbxGroup", "PbxApplication", "PbxConference", "RoutingTable", "Trunk"]
    },
},

/*
 *  Method "objectDeleted"
 *  
 *  Нотификация об удалении объекта
 *
 *  params: "oid" - идентификатор объекта
 */

"objectDeleted": {
    "type":         "indication",
    "params": {
        "oid":      "string"
    }
},


/*
 *  Object "PbxExtension"
 *  
 *  params: параметры профиля внутреннего номера, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта:
 *                          "phone" - терминал
 *                          "user"  - пользователь
 *                          
 *          "name":         имя
 *          "number":       внутренний номер телефона
 *          "display":      имя, предназначенное для отоборажения на дисплее телефона
 *          "enabled":      состояние включен/выключен (значения yes или no)
 *          "groupid":      идентификатор группы
 *          "followme":     реальный номер телефона
 *          "login":        логин пользователя
 *          "password":     пароль пользователя
 *          "pin":          пин код для управления своим профилем с телефонного аппарата (с помощью ДТМФ)
 *          "lock":         блокировка изменений профиля с телефонного аппарата
 *          "clir":         запрет отображения обратного номера
 *          "dnd":          функция "не беспокоить"
 *          "fwdall":       функция безусловной переадресации
 *          "fwdbusy":      функция переадресации по занято
 *          "fwdnans":      функция переадресации по неответу
 *          "fwdnreg":      функция переадресации при отсутствии регистрации в системе
 *          "pickupdeny":   запрет перехвата звонка с другого телефона
 *          "busyoverdeny": запрет вторжения в разговор
 *          "monitordeny":  запрет подключения к разговору в режиме прослушивания
 *          "callwaiting":  функция "ожидающий вызов"
 *          "huntbusy":     функция хантинга при занятости номера
 *          "huntnans":     функция хантинга при неответе
 *          "huntnreg":     функция хантинга при отсутствии регистраци
 *          "recording":    запись разговоров
 *          "voicemail":    функция "голосовая почта"
 *          "fwdallnumber": номер телефона для безусловной переадресации
 *          "fwdbusynumber": номер телефона для переадресации по занято
 *          "fwdnansnumber": номер телефона для переадресации по неответу
 *          "fwdnregnumber": номер телефона для переадресации при отсутствии регистрации
 *          "fwdtimeout":   время в секундах, по истечении которого выполняется переадресация по неответу
 *          "huntingnumbers": список номеров поиска (при включенном хантинге)
 *          
 */
"PbxExtension": {
    "type": "object",
    "params": {
        "oid":      "string",
        "kind":     "string",
        "name":     "string",
        "number":   "string",
        "display":  "string",
        "enabled":  "boolean",
        "groupid":  "string",
        "followme": "string",
        "login":    "string",
        "password": "string",
        "pin":      "integer",
        "features": {
            "lock":         "boolean",
            "clir":         "boolean",
            "dnd":          "boolean",
            "fwdall":       "boolean",
            "fwdbusy":      "boolean",
            "fwdnans":      "boolean",
            "fwdnreg":      "boolean",
            "pickupdeny":   "boolean",
            "busyoverdeny": "boolean",
            "monitordeny":  "boolean",
            "callwaiting":  "boolean",
            "huntbusy":     "boolean",
            "huntnans":     "boolean",
            "huntnreg":     "boolean",
            "recording":    "boolean",
            "voicemail":    "boolean",
            "fwdallnumber": "string",
            "fwdbusynumber":"string",
            "fwdnansnumber":"string",
            "fwdnregnumber":"string",
            "fwdtimeout":   "integer",
            "huntingnumbers":["string"]
        },
    }
},


/*
 *  Object "PbxGroup"
 *
 *  params: параметры объекта, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор объекта
 *          "kind":         тип объекта:
 *                          "equipment" - группа терминалов
 *                          "unit"  - группа номеров
 *                          "users" - группа пользователей
 *                          "hunting"  - группа поиска
 *                          "pickup"  - группа перехвата
 *                          "icd"  - группа обслуживания входящих вызовов
 *                          "conference"  - группа конференц-вызова
 *                          
 *          "name":         имя объекта
 *          "enabled":      состояние включен/выключен (значения yes или no)
 *          "members":      список внутренних номеров, которые входят в данную группу
 *          "available":    список внутренних номеров, которые могут быть добавлены в данную группу
 *          
 *          "options":      настройки группы (список в зависимости от типа группы).
 *          
 *                          тип объекта "equipment":
 *                          
 *                          "equipment":    тип оборудования:
 *                                          "ipphones" - IP телефоны
 *                                          "gateway"  - VoIP шлюз с регистрацией на сервере
 *                                          "trunk"    - VoIP транк
 *                                          
 *                          "protocol":     протокол подключения. Возможные значения:
 *                                          "sip", "sips"
 *                          
 *                          "gateway":   
 *                              "regname":  логин для регистрации на сервере
 *                              "regpass":  пароль для регистрациеи на сервере
 *                                       
 *                          "trunk":
 *                              "domain":  IP адрес или доменное имя
 *                              "register": транк с регистрацией (yes/no)    
 *                              "auth":  имя авторизации
 *                              "user":  логин
 *                              "pass":  пароль
 *                              "regexpires": интервал подтверждения регистрации
 *                              "proxy": регистрация на прокси сервере (yes/no)
 *                              "paddr": адрес прокси сервера
 *                              "pauth": логин для прокси сервера
 *                              "ppass": пароль для прокси сервера
 *                              
 *                          "phonelines":   количество линий на телефоне
 *                          "starflash":    разрешение использовать кнопку телефона [*] в качестве кнопки постановки на холд
 *                                          
 *                          тип объекта "unit":
 *                          "huntmode": режим поиска:
 *                                      0 - выключен
 *                                      1 - циклический по списку номеров
 *                                      2 - завершается на последнем номере списка
 *                          "timeout":  таймаут набора номера
 *                          "huntfwd":  разрешение переадресации при хантинге
 *                          "groupno":  номер группы для функции перехвата звонка
 *                          
 *                          тип объекта "hunting":
 *                          "huntmode": режим поиска:
 *                                      1 - последовательный
 *                                      3 - параллельный
 *                          "timeout":  таймаут набора номера
 *                          "huntfwd":  разрешение переадресации при хантинге
 *                          
 *                          тип объекта "pickup":
 *                          "groupno":  номер группы для функции перехвата звонка
 *                          
 *                          тип объекта "icd":
 *                          "groupno":      номер группы для функции регистрации в группе
 *                          "autologin":    автоматическая регистрация в группе при регистрации в системе
 *                          "priority":     приоритет группы
 *                          "maxlines":     максимальное количество одновременных входящих соединений
 *                          "canpickup":    разрешение перехвата вызовов в группе
 *                          "method":       метод распределения вызовов
 *                          "natimeout":    таймаут неответа на вызов
 *                          "resumetime":   время восстановления готовности номера принять вызов (после завершения предыдущего вызова)
 *                          "greeting":     файл приветствия, проигрываемый при приеме входящего вызова
 *                          "queuelen":     длина очереди
 *                          "maxqwait":     максимальное время ожидания в очереди
 *                          "indicationmode": режим рассылки звуковой индикации о наличии вызовов в очереди
 *                          "indicationtime": период рассылки звуковой индикации о наличии вызовов в очереди
 *                          "overflowredirect": переадресация при переполнении очереди
 *                          "overtimeredirect": переадресация при превышении времени ожидания в очереди
 *                          
 *                          тип объекта "conference":
 *                          "initmode":     режим первоначального подключения абонентов
 *                          "dialtimeout":  таймаут набора номера
 *                          "autoredial":   повторный автодозвон
 *                          "greeting":     проигрывать приветствие при подключении абонента
 *                          "videomode":    режим видеоконференции. Возможные значения:
 *                                          "OFF", "320x240", "352x288", "640x360", "640x480", "704x576", "1024x768", "1280x720", "1920x1080"
 *                          "maxvideomode": максимальный разрешенный режим видеоконференции
 *                          
 *          "profile":      разрешения использования функций для профилей внутренних номеров, входящих в данную группу.
 *                          (Только для групп типа "equipment", "unit" или "users").
 *                          "hold":         функция "удержание вызова"
 *                          "forwarding":   функция "переадресация вызова"
 *                          "callpickup":   функция "перехват вызова"
 *                          "dndover":      преодоление режима "не беспокоить"
 *                          "busyover":     функция "вторжение в разговор"
 *                          "clir":         функция "запрет передачи номера абонента"
 *                          "dnd":          функция "не беспокоить"
 *                          "pickupdeny":   функция "запрет перехвата вызова"
 *                          "busyoverdeny": функция "запрет вторжения в разговор"
 *                          "monitordeny":  функция "запрет подключения в разговору в режиме прослушивания"
 *                          "callwaiting":  функция "ожидающий вызов"
 *                          "outcallbarring":   запрет выполнения вызовов на внешние номера
 *                          "costroutebarring": запрет выполнения вызовов на внешние номера, если установлен тариф
 *                          "recording":    функция "запись разговоров"
 *                          "voicemail":    функция "голосовая почта"
 *                          "bnumbertransforms":таблица преобразования номеров для исходящих звонков:
 *                                              "number":   вызываемый номер или префикс вызываемого номера
 *                                              "strip":    признак отрезания префикса
 *                                              "prefix":   добавляемый префикс
 *                          
 */
"PbxGroup":{
    "type": "object",
    "params": {
        "oid":          "string",
        "kind":         "string",
        "name":         "string",
        "enabled":      "boolean",
        //"status":     "string",
        "members":      ["string"],
        "available":    ["string"],
        
        "options": {
            /* "kind": "equipment" */
            "equipment":        "string",
            "protocol":         "string",
            /* For "equipment":"gateway" */
            "gateway": {
                "regname":      "string",
                "regpass":      "string",
            },
            /* For "equipment":"trunk" */
            "trunk": {
                "register":     "boolean",
                "domain":       "string",
                "user":         "string",
                "auth":         "string",
                "pass":         "string",
                "proxy":        "boolean",
                "paddr":        "string",
                "pauth":        "string",
                "ppass":        "string",
                "regexpires":   "integer",
            },
            
            "codecs": [
                {
                "codec":    "string",
                "frame":    "integer",
                }
            ],
            "buffering":    "boolean",
            "earlymedia":   "boolean",
            "t38fax":       "boolean",
            "video":        "boolean",
            "dtmfrelay":    "boolean",
            "dtmfmode":     "string",
            "t1":           "integer",
            "t2":           "integer",
            "t3":           "integer",
            "noprogress":   "boolean",
            "nosymnat":     "boolean",
            "noredirectinfo":   "boolean",
            "h323": {
                "faststart":    "boolean",
                "h245tunneling":"boolean",
                "playringback": "boolean",
                "isdnatype":    "string",
                "isdnaplan":    "string",
                "isdnbtype":    "string",
                "isdnbplan":    "string",
                "presentation": "boolean",
            },
            "sip":{
                "nowaitack":    "boolean",
            },
            "phonelines":       "integer",
            "starflash":        "boolean",
            
            /* "kind": "unit"] */
            "huntmode":         "integer",
            "timeout":          "integer",
            "huntfwd":          "boolean",
            "groupno":          "string",

            /* "kind": "hunting" */
            "huntmode":         "integer",
            "timeout":          "integer",
            "huntfwd":          "boolean",

            /* "kind": "pickup" */
            "groupno":          "string",
            
            /* "kind": "icd" */
            "groupno":          "string",
            "autologin":        "boolean",
            "priority":         "integer",
            "maxlines":         "integer",
            "canpickup":        "boolean",
            "method":           "integer",
            "natimeout":        "integer",
            "resumetime":       "integer",
            "greeting":         "string",
            "queuelen":         "float",
            "maxqwait":         "integer",
            "indicationmode":   "integer",
            "indicationtime":   "integer",
            "overflowredirect": "string",
            "overtimeredirect": "string",

            /* "kind": "conference" */
            "initmode":         "integer",
            "dialtimeout":      "integer",
            "autoredial":       "boolean",
            "greeting":         "boolean",
            "videomode":        "string",
            "maxvideomode":     "string",
        },

        /* for "kind": "equipment", "unit" or "users" */
        "profile": {
            "hold":             "boolean",
            "forwarding":       "boolean",
            "callpickup":       "boolean",
            "dndover":          "boolean",
            "busyover":         "boolean",
            "monitor":          "boolean",
            "clir":             "boolean",
            "dnd":              "boolean",
            "pickupdeny":       "boolean",
            "busyoverdeny":     "boolean",
            "monitordeny":      "boolean",
            "callwaiting":      "boolean",
            "outcallbarring":   "boolean",
            "costroutebarring": "boolean",
            "recording":        "boolean",
            "voicemail":        "boolean",
            "bnumbertransforms": [
                {
                    "number":   "string",
                    "strip":    "boolean",
                    "prefix":   "string"
                }
            ]
        },
    }    
},


/*
 *  Object "Trunk"
 *
 *  params: параметры транка, которые могут быть получены методом getObject или установлены методом setObject
 *  
 *          "oid":          идентификатор транка
 *          "name":         имя транка
 *          "enabled":      состояние: 
 *                          true - включен
 *                          false - выключен
 *          "status":       строка описания состояния
 *          "deviceid":     идентификатор девайса (в setObject клиент должен присылать идентификатор, который получен от сервера в getObject)
 *          "protocol":     протокол: sip / sips / wss / h323
 *          
 *          "type":         тип транка:
 *                          "external" - внешний транк
 *                          "internal" - внутренний транк (с регистрацией на сервере)
 *                          
 *          Параметры внешнего транка:
 *          "domain":       IP адрес или доменное имя сервиса
 *          "register":     true - сервис с регистрацией / false - сервис без регистрации
 *          "user":         имя пользователя (номер телефона)
 *          "auth":         имя пользователя (логин)
 *          "pass":         пароль пользователя
 *          "proxy":        true - с прокси / false - без прокси
 *          "paddr":        IP адрес или доменное имя SIP прокси
 *          "pauth":        имя пользователя для прокси
 *          "ppass":        пароль пользователя для прокси
 *          
 *          Параметры внутреннего транка:
 *          "user":         имя пользователя
 *          "pass":         пароль пользователя
 *          
 *          
 *          "parameters":   параметры (настройки) протокола
 *                          
 *                          "codecs":   таблица кодеков:
 *                                      "codec":    имя кодека: "G.711 Alaw", "G.711 Ulaw", "G.729", "G.723", "Opus"
 *                                      "frame":    длительность одного фрейма в миллисекундах
 *                                      
 *                          "transcoding":  разрешить/запретить транскодинг
 *                          "buffering":    разрешить/запретить буферизацию
 *                          
 *                          "maxinbounds":  количество входящих линий
 *                          "maxoutbounds": количество входящих линий
 *                          
 *                          "inboundanumbertransforms": таблица преобразования входящего обратного номера
 *                          "inboundbnumbertransforms": таблица преобразования входящего прямого номера
 *                          "outboundanumbertransforms": таблица преобразования исходящего обратного номера
 *                          "outboundbnumbertransforms": таблица преобразования исходящего прямого номера
 */
"Trunk":{
    "type": "object",
    "params": {
        "oid":              "string",
        "name":             "string",
        "enabled":          "boolean",
        "status":           "string",
        "deviceid":         "string",
        "protocol":         "string",
        "type":             "string",
        "domain":           "string",
        "register":         "boolean",
        "user":             "string",
        "auth":             "string",
        "pass":             "string",
        "proxy":            "boolean",
        "paddr":            "string",
        "pauth":            "string",
        "ppass":            "string",
        "parameters": {
            "codecs": [
                {
                "codec":    "string",
                "frame":    "integer",
                }
            ],
            //"directrtp":    "boolean",
            "transcoding":  "boolean",
            "buffering":    "boolean",
            "earlymedia":   "boolean",
            "t38fax":       "boolean",
            "video":        "boolean",
            "dtmfrelay":    "boolean",
            "dtmfmode":     "string",
            "t1":           "integer",
            "t2":           "integer",
            "t3":           "integer",
            "regexpires":   "integer",
            "noprogress":   "boolean",
            "nosymnat":     "boolean",
            "noredirectinfo":   "boolean",
            "passanumber":  "boolean",
            "h323": {
                "faststart":    "boolean",
                "h245tunneling":"boolean",
                "playringback": "boolean",
                "isdnatype":    "string",
                "isdnaplan":    "string",
                "isdnbtype":    "string",
                "isdnbplan":    "string",
                "presentation": "boolean",
            },
            "sip":{
                "nowaitack":    "boolean",
            }
        },
        "maxinbounds":      "integer",
        "maxoutbounds":     "integer",
        "inboundanumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "inboundbnumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "outboundanumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
        "outboundbnumbertransforms": [
            {
                "number":       "string",
                "strip":        "boolean",
                "prefix":       "string",
            }
        ],
    }    
},

/*
 *  Object "PbxApplication"
 *
 */
"PbxApplication":{
    "type": "object",
    "params": {
        "oid":          "string",
        "name":         "string",
        "enabled":      "boolean",
        "status":       "string",
        "parameters": [
            {
                "key":      "string",
                "value":    "string",
            }                
        ],
        "debug":        "boolean",
        "dbconnection": {
            "driver":   "string",
            "url":      "string",
            "schema":   "string",
            "username": "string",
            "password": "string",            
        },
    }
},


/* 
 * Получить список протоколов и параметров
 * 
 * method:  "getDeviceSettings"
 * 
 * params:  нет
 * 
 * result:  список с параметрами:
 * 
 *          "stun":         STUN сервер
 *          "router":       адрес роутера
 *          "rtpfirst":     начальный номер диапазона портов RTP
 *          "rtplast":     конечный номер диапазона портов RTP
 * 
 */

"getDeviceSettings": {
    "type":                 "method",
    
    "params": {
    },
    
    "result": {
        "sip": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "sips": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "wss": {
            "port":         "number",  
            "log":          "number",
            "enabled":      "boolean",
        },
        "codecs": [
            {
            "codec":    "string",
            "frame":    "integer",
            }
        ],
        "http": {
            "port":         "number",  
            "ssl":          "boolean",  
            "log":          "number",
        },
        "nat": {
            "stun":             "string",
            "router":           "string",
            "rtpfirst":         "number",
            "rtplast":          "number",
        },
        "registrar": {
            "minexpires":       "number",
            "maxexpires":       "number",            
        },
        "net": {
            "tcptimeout":       "number",
            "rtptimeout":       "number",
            "iptos":            "number",
        },
        "system": {
            "config":           "string",
            "backup":           "string",
            "store":            "string",
            "recformat":        "number",            
        }
    }
},


/* 
 * Установить параметры
 * 
 * method:  "setDeviceSettings"
 * 
 * params:  список с параметрами:
 * 
 * result:  нет
 * 
 */

"setDeviceSettings": {
    "type":                 "method",
        
    "params": {
        "sip": {
            "port":         "number",  
            "log":          "number",
        },
        "sips": {
            "port":         "number",  
            "log":          "number",
        },
        "wss": {
            "port":         "number",  
            "log":          "number",
        },
        "codecs": [
            {
            "codec":    "string",
            "frame":    "integer",
            }
        ],
        "http": {
            "port":         "number",  
            "ssl":          "boolean",  
            "log":          "number",
        },
        "nat": {
            "stun":             "string",
            "router":           "string",
            "rtpfirst":         "number",
            "rtplast":          "number",
        },
        "registrar": {
            "minexpires":       "number",
            "maxexpires":       "number",            
        },
        "net": {
            "tcptimeout":       "number",
            "rtptimeout":       "number",
            "iptos":            "number",
        },
        "system": {
            "config":           "string",
            "backup":           "string",
            "store":            "string",
            "recformat":        "number",            
        }
    }
},

/* 
 * Получить размеры хранилищ всех пользователей бранча
 * 
 * method:  "getStoreInfo"
 * 
 * params:  нет
 * 
 * result:  список с параметрами:
 * 
 *          "user":         идентификатор пользователя
 *          "size":         размер занятого пространства в байтах
 *          "limit":        размер выделенного пространства в байтах
 * 
 */

"getStoreInfo": {
    "type":                 "method",
        
    "params": {
    },
    
    "result": [
        {
            "user":         "string",
            "size":         "number",
            "limit":        "number",
        }
    ]
},

/* 
 * Получить параметры всех хранилищ
 * 
 * method:  "getFileStore"
 * 
 * params:  нет
 * 
 * result:  список хранилищ с параметрами:
 * 
 *          "id":           идентификатор хранилища
 *          "path":         путь на директорий
 *          "maxsize":      максимальный размер в байтах
 *          "state":        статус хранилища:
 *                          0 - отключено
 *                          1 - рабочее
 *                          2 - резерв
 *                          3 - ошибка
 *                          4 - заполнено
 *          "created":      дата создания
 *          "updated":      дата редактирования
 *          "usedsize":     использованное место (в байтах)
 *          "freespace":    свободное место на диске (в байтах)
 *              
 * 
 */

"getFileStore": {
    "type":                 "method",
        
    "params": {
    },
    
    "result": [
        {
            "id":           "string",
            "path":         "string",
            "maxsize":      "number",
            "state":        "number",
            "created":      "number",
            "updated":      "number",
            "usedsize":     "number",
            "freespace":    "number",
        }
    ]
},


/* 
 * Установить параметры хранилища
 * 
 * method:  "setFileStore"
 * 
 * params:  список с параметрами:
 * 
 *          "id":           идентификатор хранилища
 *                          Если идентификатор отсутствует, создается новое хранилище
 *          "path":         путь на директорий
 *          "maxsize":      максимальный размер в байтах
 *          "state":        статус хранилища:
 *                          0 - отключено
 *                          1 - рабочее
 *                          2 - резерв
 *                          
 * result:  идентификатор хранилища
 * 
 */

"setFileStore": {
    "type":                 "method",
        
    "params": {
        "id":               "string",
        "path":             "string",
        "maxsize":          "number",
        "state":            "number",
    },
    
    "result":               "string",
},


/* 
 * Установить размер хранилища пользователя
 * 
 * method:  "setStoreLimit"
 * 
 * params:  список с параметрами:
 * 
 *          "oid":           идентификатор пользователя
 *          "limit":        максимальный размер в байтах
 *                          
 * result:  установленный размер хранилища в байтах
 *          Если запрашиваемый размер превышает остаток лимита бранча, значение будет равно этому остатку.
 *          Если запрашиваемый размер меньше, чем объем уже исподьзуемый пользователем, значение равно этому объему.
 * 
 */

"setStoreLimit": {
    "type":                 "method",
        
    "params": {
        "oid":              "string",
        "limit":            "number",
    },
    
    "result":               "number",
},


/* 
 * Сгенерировать сертификат
 * 
 * method:  "createCertificate"
 * 
 * params:  список параметров:
 * 
 *          "CN":           host name (имя или IP адрес сервера)
 *          "OU":           organization unit (отдел)
 *          "O":            organization (организация)
 *          "L":            city of location (город)
 *          "ST":           region/state (регион)
 *          "C":            country code (код страны)
 *          "V":            period of validity (days)
 * 
 * 
 * result:  сертификат в строковом формате (PEM Base64 tncoded)
 * 
 */

"createCertificate": {
    "type":                 "method",
    
    "params": {
        "CN":               "string",
        "OU":               "string",
        "O":                "string",
        "L":                "string",
        "ST":               "string",
        "C":                "string",
        "V":                "number",
    },
    
    "result":               "string",
},


/* 
 * Установить сертификат
 * 
 * method:  "setCertificate"
 * 
 * params:  список параметров:
 * 
 *          "privatekey":  приватный ключ в строковом формате
 *          "certificate": сертификат в строковом формате (PEM Base64 tncoded)
 * 
 */

"setCertificate": {
    "type":                 "method",
    
    "params": {
        "privatekey":       "string",
        "certificate":      "string",
    },
    
},


/* 
 * Получить список сертификатов с сервера
 * 
 * method:  "getCertificates"
 * 
 * params:  нет
 * 
 * 
 * "result": список имен сертификатов
 * 
 */

"getCertificates": {
    "type":                 "method",
    
    "params": {
    },
    
    "result":              ["string"],
},


/* 
 * Получить сертификат с сервера
 * 
 * method:  "getCertificate"
 * 
 * params:  список параметров:
 * 
 *          "alias":        имя сертификата
 * 
 * "result": список параметров:
 * 
 *          "certificate": сертификат в строковом формате (PEM Base64 tncoded)
 */

"getCertificate": {
    "type":                 "method",
    
    "params": {
        "alias":            "string",
    },
    
    "result": {
        "certificate":      "string",
    },
    
},


/* 
 * Удалить сертификат
 * 
 * method:  "removeCertificate"
 * 
 * params:  список параметров:
 * 
 *          "alias":        имя сертификата
 * 
 */

"removeCertificate": {
    "type":                 "method",
    
    "params": {
        "alias":            "string",
    },
    
},


/*
 * Установить роут
 * 
 * method:  "setRoute"
 * 
 * params:  параметры:
 *          "oid":          идентификатор роута
 *          "groupid":      идентификатор таблицы
 *          "number":       номер/префикс
 *          "description":  описание
 *          "target":       объект маршрута
 *                          "oid":          идентификатор объекта
 *                          "name":         имя объекта
 *          "priority":     приоритет
 *          "cost":         тариф (за минуту)
 *          "huntstop":     флаг остановки поиска маршрута на данном роуте
 * 
 * result:  "oid":          идентификатор роута
 */
"setRoute": {
    "type":                 "method",
        
    "params": {
        "oid":              "string",
        "groupid":          "string",
        "number":           "string",
        "description":      "string",
        "target": {
            "oid":          "string",
            "name":         "string",            
        },
        "priority":         "number",
        "cost":             "float",
        "huntstop":         "boolean",
    },
    
    "result": {
        "oid":              "string",
    }
},

/* 
 * Получить историю конференций.
 * 
 * method:  "getConferenceCalls"
 * 
 * params:  таблица параметров:
 *          "oid":      идентификатор конференции
 *          "begin":    начальная граница выборки (в миллисекундах от 1.01.1970)
 *          "end":      конечная граница выборки (в миллисекундах от 1.01.1970)
 *          "order":    порядок выборки:
 *                      0 - по возрастанию даты
 *                      1 - по убыванию даты
 *          "limit":    максимальное число записей в выборке
 * 
 * result:  список текущих соединений
 *          "ts":       штамп времени начала (в миллисекундах от 1.01.1970)
 *          "na":       номер инициатора конференции
 *          "nb":       входящий номер конференции
 *          "nc":       обратный номер при автодозвоне
 *          "nd":       исходящий номер для внешнего канала
 *          "td":       длительность соединения
 *          "fi":       имя файла записи
 */

"getConferenceCalls": {
    "type":                 "method",
    
    "params": {
        "oid":              "string",
        "begin":            "number",
        "end":              "number",
        "order":            "number",
        "limit":            "number",
    },
    
    "result": [
        {
            "ts":           "number",
            "na":           "string",
            "nb":           "string",
            "nc":           "string",
            "nd":           "string",
            "td":           "number",
            "fi":           "string",
        }
    ]
},


/*
 * Получить историю звонков
 * 
 * method:  "getCalls"
 * 
 * params:  таблица параметров:
 * 
 *          "contactid": идентификатор контакта. Если отсутствует, звонки выбираются по всем контактам
 *          
 *          "period":   период времени:
 *                      0   за все время
 *                      1   за последний год
 *                      2   за последний месяц
 *                      3   за последнюю неделю
 *                      4   за последние сутки
 *                      
 *          "since":    время начала выборки (в миллисекундах от 01.01.1970)
 *          "limit":    количество записей. Если параметр отсутствует или равен нулю, выборка производится
 *                      по возрастанию начиная от времени "since" до самой новой записи. В ином случае, выборка
 *                      производится по убыванию начиная  от времени "since" к более старым записям.
 *          
 * result:  список таблиц с параметрами:
 *          
 *          "number":   номер телефона.
 *          
 *          "status":   статус звонка:
 *                      5   входящий
 *                      6   исходящий
 *                      12  пропущенный (новый)
 *                      13  входящий без ответа
 *                      14  исходящий без ответа
 *          
 *          "time":     время звонка (в миллисекундах от 01.01.1970)
 *          
 *          "dur":      длительность соединения.
 *          
 *          "file":     имя файла.
 */

"getCalls": {
    "type":                 "method",
    "target":               "server",
    "description":          "List of calls",
    
    "params": {
        "contactid":        "string",
        "period":           "number",
        "since":            "number",
        "limit":            "number",
    },

    "result": [
        {
            "id":           "string",
            "contactid":    "string",
            "number":       "string",
            "status":       "number",
            "time":         "number",
            "dur":          "number",
            "file":         "string",
        }
    ],
    
},

/* 
 * Записать информацию пользователя
 * 
 * method:  "setUserInfo"
 * 
 * params:  
 *          "userid":   идентификатор пользователя 
 *          "position": 
 *          "birthday":
 *          "email":
 *          "location":
 *          "department":
 *          "about":
 *          "lastname":
 *          "firstname":
 *          "mobile":
 * 
 */

"setUserInfo": {
    "type":             "method",
    
    "params": {
        "userid":       "string",
        "position":     "string",
        "birthday":     "string",
        "email":        "string",
        "mobile":       "string",
        "firstname":    "string",
        "lastname":     "string",
        "location":     "string",
        "department":   "string",
        "about":        "string",
    },
},


/* 
 * Получить информацию пользователя
 * 
 * method:  "getUserInfo"
 * 
 * params:  
 *          "userid":   идентификатор пользователя 
 *          
 * result:  
 *          "position": 
 *          "birthday":
 *          "email":
 *          "location":
 *          "department":
 *          "about":
 *          "lastname":
 *          "firstname":
 *          "mobile":
 * 
 */

"getUserInfo": {
    "type":             "method",
    
    "params": {
        "userid":       "string",
    },
    
    "result": {
        "position":     "string",
        "birthday":     "string",
        "email":        "string",
        "mobile":       "string",
        "firstname":    "string",
        "lastname":     "string",
        "location":     "string",
        "department":   "string",
        "about":        "string",
    },
},


/* 
 * Информация контакта
 * 
 *      "Contacts": - список дополнительных контактных данных:
 *                    "type":   тип данных:
 *                              "SIP", "Mobile", "Phone", "Fax", "Email", "Web", "BusinessPhone", "PrivatePhone","BusinessMobile",
 *                              "PrivateMobile", "BusinessFax", "PrivateFax", "BusinessEmail", "PrivateEmail", "BusinessWeb", "PrivateWeb"
 *                    "value"   значение    
 */

"ContactInfo": {
    "type": "object",
    
    "params": {
        "email":        "string",
        "www":          "string",
        "FirstName":    "string",
        "LastName":     "string",
        "FullName":     "string",
        "JobTitle":     "string",
        "Organization": "string",
        "Branch":       "string",
        "Department":   "string",
        "Address":      "string",
        "City":         "string",
        "State":        "string",
        "Country":      "string",
        "PostalCode":   "string",
        "Birthday":     "string",
        "About":        "string",
        "Contacts": [
            {
                "type": "string",
                "value":"string",
            }
        ]
    }
},


/* 
 * Получить информацию контакта
 * 
 * method:  "getContact"
 * 
 * params:  
 *          "id":          идентификатор контакта 
 *          
 * result:  
 *          "id":          идентификатор контакта 
 *          "name":        имя контакта 
 *          "userid":      номер телефона
 *          "status":      статус контакта:
 *                         3 - в черном списке
 *                         4 - нормальный
 *                         6 - в списке избранных
 *                         7 - временный
 *          
 *          "usinfo": -    информация контакта
 *                         
 * 
 */

"getContact": {
    "type":             "method",
    
    "params": {
        "id":           "string",
    },
    
    "result": {
        "id":           "string",
        "name":         "string",
        "userid":       "string",
        "status":       "number",
        "usinfo":       "ContactInfo",
    },
},


/* 
 * Получить список контактов
 * 
 * method:  "getContacts"
 * 
 *          
 * result:  
 *          "id":          идентификатор контакта 
 *          "name":        имя контакта 
 *          "userid":      номер телефона
 *          "status":      статус контакта:
 *                         3 - в черном списке
 *                         4 - нормальный
 *                         6 - в списке избранных
 *                         7 - временный
 *          
 *          "usinfo": -    информация контакта
 *                         
 * 
 */

"getContacts": {
    "type":             "method",
    
    "result": [
        {
            "id":           "string",
            "name":         "string",
            "userid":       "string",
            "status":       "number",
            "usinfo":       "ContactInfo",
        },
    ]
},


/* 
 * Создать контакт 
 * 
 * method:  "createContact"
 * 
 * params:  
 *          "name":     имя контакта
 *          "userid":   номер телефона 
 *          "usinfo":   информация контакта
 *          
 * result:              идентификатор контакта
 * 
 */

"createContact": {
    "type":             "method",
    
    "params": {
        "name":         "string",
        "userid":       "string",
        "usinfo":       "ContactInfo",
    },
    
    "result":           "string",
},


/* 
 * Обновить данные контакта 
 * 
 * method:  "updateContact"
 * 
 * params:  
 *          "id":       идентификатор контакта
 *          "name":     имя контакта
 *          "userid":   номер телефона 
 *          "usinfo":   информация контакта
 * 
 */

"updateContact": {
    "type":             "method",
    
    "params": {
        "id":           "string",
        "name":         "string",
        "userid":       "string",
        "usinfo":       "ContactInfo",
    },
},


/* 
 * Удалить контакт 
 * 
 * method:  "deleteContact"
 * 
 * params:  
 *          "id":       идентификатор контакта
 * 
 */

"deleteContact": {
    "type":             "method",
    
    "params": {
        "id":           "string",
    },
},


/* 
 * Создана конференция.
 * 
 * Запрос от клиента, на котором создана конференция
 * 
 * method:  "conferenceCreated"
 * 
 * params:  
 *          "owner":    номер инициатора конференции
 *          "parties":  список номеров участников
 *          "media":    тип конференции
 *                      0 - аудио
 *                      1 - видео
 *          
 * result:              идентификатор конференции
 * 
 */

"conferenceCreated": {
    "type":             "method",
    
    "params": {
        "owner":        "string",
        "parties":      ["string"],
        "media":        "number",
    },
    
    "result":           "string",
},

/* 
 * Создана конференция.
 * 
 * Рассылка от сервера клиентам - участникам конференции
 * 
 * method:  "conferenceCreated"
 * 
 * params:  
 *          "id":       идентификатор конференции
 *          "owner":    номер инициатора конференции
 *          "parties":  список номеров участников
 *          "media":    тип конференции
 *                      0 - аудио
 *                      1 - видео
 *          
 * result:              идентификатор конференции
 * 
 */

"conferenceCreated": {
    "type":             "indication",
    
    "params": {
        "id":           "string",
        "owner":        "string",
        "parties":      ["string"],
        "media":        "number",
    },
},


/* 
 * Изменение состава участников конференции 
 * 
 * Запрос от клиента, на котором была создана конференция
 * 
 * method:  "conferenceUpdated"
 * 
 * params:  
 *          "id":       идентификатор конференции
 *          "party":    номер участника
 *          "event":    состояние
 *                      1 - подключен
 *                      2 - отключен владельцем конференции
 *                      3 - отключился
 * 
 */

"conferenceUpdated": {
    "type":             "indication",
    
    "params": {
        "id":           "string",
        "party":        "string",
        "event":        "number",
    }
},


/* 
 * Изменение состава участников конференции 
 * 
 * Рассылка от сервера клиентам - участникам конференции
 * 
 * method:  "conferenceUpdated"
 * 
 * params:  
 *          "id":       идентификатор конференции
 *          "party":    номер участника
 *          "event":    состояние
 *                      1 - подключен
 *                      2 - отключен владельцем конференции
 *                      3 - отключился
 *          "owner":    номер инициатора конференции
 *          "parties":  текущий список номеров участников
 * 
 */

"conferenceUpdated": {
    "type":             "indication",
    
    "params": {
        "id":           "string",
        "party":        "string",
        "event":        "number",
        "owner":        "string",
        "parties":      ["string"],
    }
},

/* 
 * Конференция завершена
 * 
 * Запрос от клиента, на котором была создана конференция
 * 
 * method:  "conferenceDeleted"
 * 
 * params:  
 *          "id":       идентификатор конференции
 *          
 */

"conferenceDeleted": {
    "type":             "indication",
    
    "params": {
        "id":          "string",
    },
},

/* 
 * Конференция завершена
 * 
 * Рассылка от сервера клиентам - участникам конференции
 * 
 * method:  "conferenceDeleted"
 * 
 * params:  список параметров
 * 
 *          "id":       идентификатор конференции
 *          "timecode": время старта конференции (в миллисекундах от 1.01.1970)
 *          "media":    тип конференции
 *                      0 - аудио
 *                      1 - видео
 *          "owner":    номер инициатора конференции
 *          "parties":  список номеров участников
 *          "uptime":   время окончания конференции (в миллисекундах от 1.01.1970)
 * 
 */

"conferenceDeleted": {
    "type":             "indication",
    
    "params": {
        "id":          "string",
        "timecode":    "number",
        "media":       "string",
        "owner":       "string",
        "parties":     ["string"],
        "uptime":      "number",
    }
},


/* 
 * Установить список номеров и транков для записи разговоров
 * 
 * method:  "setVoiceRecordingList"
 * 
 * params:  список параметров
 * 
 *          "trunks":        список идентификаторов транков
 *          "trunksmode":    тип списка идентификаторов
 *                           0 - список для записи (записываются только те, которые есть в списке)
 *                           1 - список исключений (записываются все, кроме тех, которые в списке)
 *                           
 *          "extensions":   список внутренних номеров
 *          "extmode":      тип списка номеров
 *                           0 - список для записи (записываются только те, которые есть в списке)
 *                           1 - список исключений (записываются все, кроме тех, которые в списке)
 * 
 */

"setVoiceRecordingList": {
    
    "type":             "method",
    
    "params": {
        "trunksmode":   "integer",
        "trunks":       ["string"],
        "extmode":      "integer",
        "extensions":   ["string"],
    }
},


/* 
 * Получить список номеров и транков для записи разговоров
 * 
 * method:  "getVoiceRecordingList"
 * 
 * result:  список параметров
 * 
 *          "trunks":        список идентификаторов транков
 *          "trunksmode":    тип списка идентификаторов
 *                           0 - список для записи (записываются только те, которые есть в списке)
 *                           1 - список исключений (записываются все, кроме тех, которые в списке)
 *                           
 *          "extensions":   список внутренних номеров
 *          "extmode":      тип списка номеров
 *                           0 - список для записи (записываются только те, которые есть в списке)
 *                           1 - список исключений (записываются все, кроме тех, которые в списке)
 * 
 */

"getVoiceRecordingList": {
    
    "type":             "method",

    "params": {    
    },
    
    "result": {
        "trunksmode":   "integer",
        "trunks":       ["string"],
        "extmode":      "integer",
        "extensions":   ["string"],
    }
},


/* 
 * Управление записью разговора
 * 
 * method:  "setRecordingState"
 * 
 * params:  список параметров
 * 
 *          "rec":      включить/выключить запись
 *                      true - включить
 *                      false - выключить
 * 
 */

"setRecordingState": {
    
    "type":             "method",
    
    "params": {
        "rec":          "boolean",
    }
},


/* 
 * Индикация о включении/выключении записи. От сервера к клиенту
 * 
 * method:  "voiceRecording"
 * 
 * params:  список параметров
 * 
 *          "oid":           идентификатор объекта
 *          "userid":        логин пользователя
 *          "ext":           внутренний номер пользователя
 *          "party":         номер абонента, с которым пользователь соединен
 *          "rec":           индикация записи:
 *                              true - включена
 *                              false - выключена
 * 
 */

"voiceRecording": {
    
    "type":             "indication",
    
    "params": {
        "oid":          "string",
        "userid":       "string",
        "ext":          "string",
        "party":        "string",
        "rec":          "boolean",
    }
},


/* 
 * Отчет о завершившемся звонке от сервера клиенту.
 * 
 * method:  "callReport"
 * 
 * params:  таблица параметров:
 *          "id":        идентификатор записи
 *          "contactid": идентификатор контакта
 *          "time":      время начала звонка (в миллисекундах от 1.01.1970)
 *          "number":    номер абонента
 *          "dur":       длительность соединения в секундах
 *          "status":    статус звонка:
 *                       5 - входящий (EVENT_CALL_INCOMING);
 *                       6 - исходящий (EVENT_CALL_OUTGOING);
 *                       12 - пропущенный входящий (EVENT_CALL_MISSED_NEW);
 *                       14 - несостоявшийся исходящий (EVENT_CALL_OUTGOING_MISSED);
 *                       
 *          "file":      файл с записью разговора
 * 
 */

"callReport": {
    "type":                 "indication",
    
    "params": {
        "id":               "string",
        "contactid":        "string",
        "time":             "number",
        "number":           "string",
        "dur":              "number",
        "status":           "number",
        "file":             "string",
    },
},


/*
 * Информация о входящем вызове. Передается от сервера клиенту при поступлении входящего вызова
 * 
 * method:  "incomingCall"
 * 
 * params:  
 *          "caller":       вызывающий номер
 *          "called":       вызываемый номер
 * 
 * result:  нет
 * 
 * Пример: server -> client: {"method":"setProcess","params":{"pid":"14213451234567splink1","type":1,"task":"hotline","caller":"1234567","called":"333777"}}
 */
"incomingCall": {
    "type":                 "indication",

    "params": {
        "caller":           "string",
        "called":           "string",
    }
},
  

/* 
 * Удаление записи разговора
 * 
 * method:  "deleteRecord"
 * 
 * params:  список параметров
 * 
 *          "id":      идентификатор записи
 * 
 */

"deleteRecord": {
    
    "type":             "method",
    
    "params": {
        "id":          "string",
    }
},


/*
 *  Method "objectCreated"
 *  Нотификация о создании объекта
 *
 *  params: список параметров
 *  
 *          "oid":           идентификатор объекта
 *          "name":          имя объекта
 *          "kind":          тип объекта:
 *                           "equipment" - группа оборудования
 *                           "users" - группа пользователей
 *                           "unit" - организационная группа
 *                           "user" - пользователь
 *                           "phone" - телефон
 *                           
 *          Параметр для объектов типа "equipment", "users" или "unit":
 *                           
 *          "pmask":         маска профиля группы
 *          
 *          
 *          Параметры для объектов типа "user" или "phone":
 *          
 *          "userid":   логин пользователя
 *          "ext":      внутренний номер
 *          "group":    имя группы
 *          "groupid":  идентификатор группы
 *          "fmask":    маска профиля пользователя
 */

"objectCreated": {
    "type":         "indication",
    
    "params": {
        "oid":      "string",
        "name":     "string",
        "kind":     "string",
        
        "pmask":    "integer",
        
        "userid":   "string",
        "ext":      "string",
        "group":    "string",
        "groupid":  "string",
        "fmask":    "integer",
    },
},


/*
 *  Method "objectUpdated"
 *  
 *  Нотификация об изменении параметров объекта
 *
 *  params: список параметров
 *  
 *          "oid":           идентификатор объекта
 *          "name":          имя объекта
 *          "kind":          тип объекта:
 *                           "equipment" - группа оборудования
 *                           "users" - группа пользователей
 *                           "unit" - организационная группа
 *                           "user" - пользователь
 *                           "phone" - телефон
 *                           
 *          Параметр для объектов типа "equipment", "users" или "unit":
 *                           
 *          "pmask":         маска профиля группы
 *          
 *          
 *          Параметры для объектов типа "user" или "phone":
 *          
 *          "userid":   логин пользователя
 *          "ext":      внутренний номер
 *          "group":    имя группы
 *          "groupid":  идентификатор группы
 *          "fmask":    маска профиля пользователя
 *          "reg":      IP адрес регистрации
 *          "state":    состояние
 *                      0 - не зарегистрирован
 *                      1 - свободен
 *                      2 - установлена переадресация на внешний номер
 *                      3 - не беспокоить
 *                      4 - невидимый
 *                      5 - выключен
 *                      6 - исходящий вызов
 *                      7 - входящий вызов
 *                      8 - соединен
 */

"objectUpdated": {
    "type":         "indication",
    
    "params": {
        "oid":      "string",
        "name":     "string",
        "kind":     "string",
        
        "pmask":    "integer",
        
        "userid":   "string",
        "ext":      "string",
        "group":    "string",
        "groupid":  "string",
        "fmask":    "integer",
        "reg":      "string",
        "state":    "integer",
    },
},

/*
 *  Method "objectDeleted"
 *  
 *  Нотификация об удалении объекта
 *
 *  params: 
 *          "oid":           идентификатор объекта
 *          "kind":          тип объекта:
 *                           "equipment" - группа оборудования
 *                           "users" - группа пользователей
 *                           "unit" - организационная группа
 *                           "selector" - селектор
 *                           "channel" - канал
 *                           "user" - пользователь
 *                           "phone" - телефон
 *                           
 *          "ext":           внутренний номер (если был)
 *  
 */

"objectDeleted": {
    "type":         "indication",
    "params": {
        "oid":      "string",
        "kind":     "string",
        "ext":      "string",
    }
},


/*
 *  Method "extensionCreated"
 *  
 *  Нотификация о создании записи в таблице маршрутизации
 *
 *  params: список параметров
 *  
 *          "oid":           идентификатор объекта
 *          "name":          имя объекта
 *          "kind":          тип объекта:
 *                           "equipment" - группа оборудования
 *                           "users" - группа пользователей
 *                           "unit" - организационная группа
 *                           "selector" - селектор
 *                           "channel" - канал
 *                           "conference" - конференция
 *                           "application" - приложение
 *                           "hunting" - группа поиска
 *                           "icd" - группа обслуживания входящих вызовов
 *                           
 *          "ext":           внутренний номер
 *          "group":         имя группы
 *          "state":         состояние
 *                           0 - выключен
 *                           1 - включен
 *                           8 - соединен (для конференций)
 */

"extensionCreated": {
    "type":         "indication",
    
    "params": {
        "oid":      "string",
        "name":     "string",
        "kind":     "string",       
        "ext":      "string",
        "group":    "string",
        "state":    "integer",
    },
},

/*
 *  Method "extensionDeleted"
 *  
 *  Нотификация об удалении записи в таблице маршрутизации
 *
 *  params: 
 *          "oid":           идентификатор объекта
 *          "ext":           внутренний номер
 *  
 */

"extensionDeleted": {
    "type":         "indication",
    "params": {
        "oid":      "string",
        "ext":      "string",
    }
},


/*************************************************************************************************************
 *  Методы админа
 *************************************************************************************************************/

/*
 *  Method "getBranchOptions"
 *  
 *  Получить настройки бранча
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *          
 *  result: список параметров:
 *          
 *          "name":         имя бранча
 *          "lang":         язык интерфейса
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "enabled":      статус:
 *                          true - активен
 *                          false- выключен
 *          "config":       конфигурация бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *          "storesize":    использованный размер файлового хранилища
 */

"getBranchOptions": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string" 
    },

    "result": {
        "name":         "string",
        "lang":         "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "enabled":      "boolean",
        "config":       ["string"],
        "storesize":    "number",
        "storelimit":   "number",
    }
},


/*
 *  Method "setBranchOptions"
 *  
 *  Изменить настройки бранча
 *
 *  params: список параметров:
 *          
 *          "name":         имя бранча
 *          "lang":         язык интерфейса
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "enabled":      статус:
 *                          true - активен
 *                          false- выключен
 *          "config":       конфигурация бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *  
 */

"setBranchOptions": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string",
        "name":         "string",
        "lang":         "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "enabled":      "boolean",
        "config":       ["string"],
        "storelimit":   "number",
    }
},



/*
 *  Method "createBranch"
 *  
 *  Создать бранч
 *
 *  params: список параметров:
 *          
 *          "name":         имя бранча
 *          "lang":         язык интерфейса
 *          "protocol":     протокол (по умолчанию "wss", но возможно "sip" или "sips")
 *          "prefix":       префикс бранча
 *          "adminname":    логин администратора бранча
 *          "adminpass":    пароль администратора бранча
 *          "maxlines":     количество линий
 *          "extensions":   список диапазонов внутренних номеров:
 *                          "firstnumber":  начальный номер
 *                          "poolsize":     количество номеров
 *          "config":       конфигурация бранча (список опций):
 *          "storelimit":   размер файлового хранилища
 *  
 *  result: идентификатор бранча
 */

"createBranch": {
    
    "type":             "method",
    
    "params": {
        "name":         "string",
        "lang":         "string",
        "protocol":     "string",
        "prefix":       "string",
        "adminname":    "string",
        "adminpass":    "string",
        "maxlines":     "number",
        "extensions": [
            {
                "firstnumber":  "number",
                "poolsize":     "number",
            }
        ],
        "config":       ["string"],
        "storelimit":   "number",
    },
    
    "result":           "string" 
},


/*
 *  Method "deleteBranch"
 *  
 *  Удалить бранч
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *  
 */

"deleteBranch": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string" 
    },
},


/*
 *  Method "setBranchState"
 *  
 *  Установить состояние бранча
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *          "enabled":      состояние:
 *                          true - включить
 *                          false- выключить
 *          "description":  описание (или код) состояния
 *  
 */

"setBranchState": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string", 
        "enabled":      "boolean",
        "description":  "string",
    },
},


/*
 *  Method "getBranchState"
 *  
 *  Получить состояние бранча
 *
 *  params: 
 *          "oid":          идентификатор бранча
 *          
 *          
 *  "result":
 *          "enabled":      состояние:
 *                          true - работает
 *                          false- выключен
 *          "description":  описание (или код) состояния
 */

"getBranchState": {
    
    "type":             "method",
    
    "params": {
        "oid":          "string" 
    },
    
    "result": {
        "enabled":      "boolean",
        "description":  "string",
    },
},

}


